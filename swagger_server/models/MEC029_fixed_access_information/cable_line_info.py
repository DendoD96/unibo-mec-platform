# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC029_fixed_access_information.cable_line_info_cm_info import CableLineInfoCmInfo  # noqa: F401,E501
from swagger_server.models.MEC029_fixed_access_information.cp_info import CpInfo  # noqa: F401,E501
from swagger_server.models.MEC029_fixed_access_information.time_stamp import TimeStamp  # noqa: F401,E501
from swagger_server import util


class CableLineInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cm_info: CableLineInfoCmInfo=None, customer_premises_info: CpInfo=None, time_stamp: TimeStamp=None):  # noqa: E501
        """CableLineInfo - a model defined in Swagger

        :param cm_info: The cm_info of this CableLineInfo.  # noqa: E501
        :type cm_info: CableLineInfoCmInfo
        :param customer_premises_info: The customer_premises_info of this CableLineInfo.  # noqa: E501
        :type customer_premises_info: CpInfo
        :param time_stamp: The time_stamp of this CableLineInfo.  # noqa: E501
        :type time_stamp: TimeStamp
        """
        self.swagger_types = {
            'cm_info': CableLineInfoCmInfo,
            'customer_premises_info': CpInfo,
            'time_stamp': TimeStamp
        }

        self.attribute_map = {
            'cm_info': 'cmInfo',
            'customer_premises_info': 'customerPremisesInfo',
            'time_stamp': 'timeStamp'
        }
        self._cm_info = cm_info
        self._customer_premises_info = customer_premises_info
        self._time_stamp = time_stamp

    @classmethod
    def from_dict(cls, dikt) -> 'CableLineInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CableLineInfo of this CableLineInfo.  # noqa: E501
        :rtype: CableLineInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cm_info(self) -> CableLineInfoCmInfo:
        """Gets the cm_info of this CableLineInfo.


        :return: The cm_info of this CableLineInfo.
        :rtype: CableLineInfoCmInfo
        """
        return self._cm_info

    @cm_info.setter
    def cm_info(self, cm_info: CableLineInfoCmInfo):
        """Sets the cm_info of this CableLineInfo.


        :param cm_info: The cm_info of this CableLineInfo.
        :type cm_info: CableLineInfoCmInfo
        """
        if cm_info is None:
            raise ValueError("Invalid value for `cm_info`, must not be `None`")  # noqa: E501

        self._cm_info = cm_info

    @property
    def customer_premises_info(self) -> CpInfo:
        """Gets the customer_premises_info of this CableLineInfo.


        :return: The customer_premises_info of this CableLineInfo.
        :rtype: CpInfo
        """
        return self._customer_premises_info

    @customer_premises_info.setter
    def customer_premises_info(self, customer_premises_info: CpInfo):
        """Sets the customer_premises_info of this CableLineInfo.


        :param customer_premises_info: The customer_premises_info of this CableLineInfo.
        :type customer_premises_info: CpInfo
        """
        if customer_premises_info is None:
            raise ValueError("Invalid value for `customer_premises_info`, must not be `None`")  # noqa: E501

        self._customer_premises_info = customer_premises_info

    @property
    def time_stamp(self) -> TimeStamp:
        """Gets the time_stamp of this CableLineInfo.


        :return: The time_stamp of this CableLineInfo.
        :rtype: TimeStamp
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp: TimeStamp):
        """Sets the time_stamp of this CableLineInfo.


        :param time_stamp: The time_stamp of this CableLineInfo.
        :type time_stamp: TimeStamp
        """

        self._time_stamp = time_stamp
