# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC029_fixed_access_information.cm_conn_subscription_filter_criteria_cm_conn_cm_if import CmConnSubscriptionFilterCriteriaCmConnCmIf  # noqa: F401,E501
from swagger_server.models.MEC029_fixed_access_information.cp_info import CpInfo  # noqa: F401,E501
from swagger_server import util


class CmConnSubscriptionFilterCriteriaCmConn(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cm_if: List[CmConnSubscriptionFilterCriteriaCmConnCmIf]=None, customer_premises_info: CpInfo=None):  # noqa: E501
        """CmConnSubscriptionFilterCriteriaCmConn - a model defined in Swagger

        :param cm_if: The cm_if of this CmConnSubscriptionFilterCriteriaCmConn.  # noqa: E501
        :type cm_if: List[CmConnSubscriptionFilterCriteriaCmConnCmIf]
        :param customer_premises_info: The customer_premises_info of this CmConnSubscriptionFilterCriteriaCmConn.  # noqa: E501
        :type customer_premises_info: CpInfo
        """
        self.swagger_types = {
            'cm_if': List[CmConnSubscriptionFilterCriteriaCmConnCmIf],
            'customer_premises_info': CpInfo
        }

        self.attribute_map = {
            'cm_if': 'cmIf',
            'customer_premises_info': 'customerPremisesInfo'
        }
        self._cm_if = cm_if
        self._customer_premises_info = customer_premises_info

    @classmethod
    def from_dict(cls, dikt) -> 'CmConnSubscriptionFilterCriteriaCmConn':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CmConnSubscription.filterCriteriaCmConn of this CmConnSubscriptionFilterCriteriaCmConn.  # noqa: E501
        :rtype: CmConnSubscriptionFilterCriteriaCmConn
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cm_if(self) -> List[CmConnSubscriptionFilterCriteriaCmConnCmIf]:
        """Gets the cm_if of this CmConnSubscriptionFilterCriteriaCmConn.


        :return: The cm_if of this CmConnSubscriptionFilterCriteriaCmConn.
        :rtype: List[CmConnSubscriptionFilterCriteriaCmConnCmIf]
        """
        return self._cm_if

    @cm_if.setter
    def cm_if(self, cm_if: List[CmConnSubscriptionFilterCriteriaCmConnCmIf]):
        """Sets the cm_if of this CmConnSubscriptionFilterCriteriaCmConn.


        :param cm_if: The cm_if of this CmConnSubscriptionFilterCriteriaCmConn.
        :type cm_if: List[CmConnSubscriptionFilterCriteriaCmConnCmIf]
        """

        self._cm_if = cm_if

    @property
    def customer_premises_info(self) -> CpInfo:
        """Gets the customer_premises_info of this CmConnSubscriptionFilterCriteriaCmConn.


        :return: The customer_premises_info of this CmConnSubscriptionFilterCriteriaCmConn.
        :rtype: CpInfo
        """
        return self._customer_premises_info

    @customer_premises_info.setter
    def customer_premises_info(self, customer_premises_info: CpInfo):
        """Sets the customer_premises_info of this CmConnSubscriptionFilterCriteriaCmConn.


        :param customer_premises_info: The customer_premises_info of this CmConnSubscriptionFilterCriteriaCmConn.
        :type customer_premises_info: CpInfo
        """

        self._customer_premises_info = customer_premises_info
