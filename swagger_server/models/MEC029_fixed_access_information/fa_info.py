# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC029_fixed_access_information.cp_info import \
	CpInfo  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC029_fixed_access_information.fa_info_connectivity_info import \
	FaInfoConnectivityInfo  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC029_fixed_access_information.time_stamp import \
	TimeStamp  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class FaInfo(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, connectivity_info: List[FaInfoConnectivityInfo] = None,
	             customer_premises_info: List[CpInfo] = None, time_stamp: TimeStamp = None):  # noqa: E501
		"""FaInfo - a model defined in Swagger

		:param connectivity_info: The connectivity_info of this FaInfo.  # noqa: E501
		:type connectivity_info: List[FaInfoConnectivityInfo]
		:param customer_premises_info: The customer_premises_info of this FaInfo.  # noqa: E501
		:type customer_premises_info: List[CpInfo]
		:param time_stamp: The time_stamp of this FaInfo.  # noqa: E501
		:type time_stamp: TimeStamp
		"""
		self.swagger_types = {
			'connectivity_info': List[FaInfoConnectivityInfo],
			'customer_premises_info': List[CpInfo],
			'time_stamp': TimeStamp
		}

		self.attribute_map = {
			'connectivity_info': 'connectivityInfo',
			'customer_premises_info': 'customerPremisesInfo',
			'time_stamp': 'timeStamp'
		}
		self._connectivity_info = connectivity_info
		self._customer_premises_info = customer_premises_info
		self._time_stamp = time_stamp

	@classmethod
	def from_dict(cls, dikt) -> 'FaInfo':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The FaInfo of this FaInfo.  # noqa: E501
		:rtype: FaInfo
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def connectivity_info(self) -> List[FaInfoConnectivityInfo]:
		"""Gets the connectivity_info of this FaInfo.


		:return: The connectivity_info of this FaInfo.
		:rtype: List[FaInfoConnectivityInfo]
		"""
		return self._connectivity_info

	@connectivity_info.setter
	def connectivity_info(self, connectivity_info: List[FaInfoConnectivityInfo]):
		"""Sets the connectivity_info of this FaInfo.


		:param connectivity_info: The connectivity_info of this FaInfo.
		:type connectivity_info: List[FaInfoConnectivityInfo]
		"""

		self._connectivity_info = connectivity_info

	@property
	def customer_premises_info(self) -> List[CpInfo]:
		"""Gets the customer_premises_info of this FaInfo.

		The physical location of a customer site.  # noqa: E501

		:return: The customer_premises_info of this FaInfo.
		:rtype: List[CpInfo]
		"""
		return self._customer_premises_info

	@customer_premises_info.setter
	def customer_premises_info(self, customer_premises_info: List[CpInfo]):
		"""Sets the customer_premises_info of this FaInfo.

		The physical location of a customer site.  # noqa: E501

		:param customer_premises_info: The customer_premises_info of this FaInfo.
		:type customer_premises_info: List[CpInfo]
		"""
		if customer_premises_info is None:
			raise ValueError("Invalid value for `customer_premises_info`, must not be `None`")  # noqa: E501

		self._customer_premises_info = customer_premises_info

	@property
	def time_stamp(self) -> TimeStamp:
		"""Gets the time_stamp of this FaInfo.


		:return: The time_stamp of this FaInfo.
		:rtype: TimeStamp
		"""
		return self._time_stamp

	@time_stamp.setter
	def time_stamp(self, time_stamp: TimeStamp):
		"""Sets the time_stamp of this FaInfo.


		:param time_stamp: The time_stamp of this FaInfo.
		:type time_stamp: TimeStamp
		"""

		self._time_stamp = time_stamp
