# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC029_fixed_access_information.cable_line_info_cm_info_service_flow_stats_service_flow_info import \
	CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class CableLineInfoCmInfoServiceFlowStats(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, if_index: str = None,
	             service_flow_info: List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo] = None):  # noqa: E501
		"""CableLineInfoCmInfoServiceFlowStats - a model defined in Swagger

		:param if_index: The if_index of this CableLineInfoCmInfoServiceFlowStats.  # noqa: E501
		:type if_index: str
		:param service_flow_info: The service_flow_info of this CableLineInfoCmInfoServiceFlowStats.  # noqa: E501
		:type service_flow_info: List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo]
		"""
		self.swagger_types = {
			'if_index': str,
			'service_flow_info': List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo]
		}

		self.attribute_map = {
			'if_index': 'ifIndex',
			'service_flow_info': 'serviceFlowInfo'
		}
		self._if_index = if_index
		self._service_flow_info = service_flow_info

	@classmethod
	def from_dict(cls, dikt) -> 'CableLineInfoCmInfoServiceFlowStats':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The CableLineInfo.cmInfo.serviceFlowStats of this CableLineInfoCmInfoServiceFlowStats.  # noqa: E501
		:rtype: CableLineInfoCmInfoServiceFlowStats
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def if_index(self) -> str:
		"""Gets the if_index of this CableLineInfoCmInfoServiceFlowStats.

		It represents the interface index of the MAC Domain of the Service Flow  # noqa: E501

		:return: The if_index of this CableLineInfoCmInfoServiceFlowStats.
		:rtype: str
		"""
		return self._if_index

	@if_index.setter
	def if_index(self, if_index: str):
		"""Sets the if_index of this CableLineInfoCmInfoServiceFlowStats.

		It represents the interface index of the MAC Domain of the Service Flow  # noqa: E501

		:param if_index: The if_index of this CableLineInfoCmInfoServiceFlowStats.
		:type if_index: str
		"""
		if if_index is None:
			raise ValueError("Invalid value for `if_index`, must not be `None`")  # noqa: E501

		self._if_index = if_index

	@property
	def service_flow_info(self) -> List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo]:
		"""Gets the service_flow_info of this CableLineInfoCmInfoServiceFlowStats.


		:return: The service_flow_info of this CableLineInfoCmInfoServiceFlowStats.
		:rtype: List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo]
		"""
		return self._service_flow_info

	@service_flow_info.setter
	def service_flow_info(self, service_flow_info: List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo]):
		"""Sets the service_flow_info of this CableLineInfoCmInfoServiceFlowStats.


		:param service_flow_info: The service_flow_info of this CableLineInfoCmInfoServiceFlowStats.
		:type service_flow_info: List[CableLineInfoCmInfoServiceFlowStatsServiceFlowInfo]
		"""
		if service_flow_info is None:
			raise ValueError("Invalid value for `service_flow_info`, must not be `None`")  # noqa: E501

		self._service_flow_info = service_flow_info
