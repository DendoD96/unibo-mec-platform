# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC029_fixed_access_information.cm_conn_notification_cm_if import \
	CmConnNotificationCmIf  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC029_fixed_access_information.cp_info import \
	CpInfo  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC029_fixed_access_information.time_stamp import \
	TimeStamp  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class CmConnNotification(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, cm_if: List[CmConnNotificationCmIf] = None, customer_premises_info: CpInfo = None,
	             notification_type: str = None, time_stamp: TimeStamp = None):  # noqa: E501
		"""CmConnNotification - a model defined in Swagger

		:param cm_if: The cm_if of this CmConnNotification.  # noqa: E501
		:type cm_if: List[CmConnNotificationCmIf]
		:param customer_premises_info: The customer_premises_info of this CmConnNotification.  # noqa: E501
		:type customer_premises_info: CpInfo
		:param notification_type: The notification_type of this CmConnNotification.  # noqa: E501
		:type notification_type: str
		:param time_stamp: The time_stamp of this CmConnNotification.  # noqa: E501
		:type time_stamp: TimeStamp
		"""
		self.swagger_types = {
			'cm_if': List[CmConnNotificationCmIf],
			'customer_premises_info': CpInfo,
			'notification_type': str,
			'time_stamp': TimeStamp
		}

		self.attribute_map = {
			'cm_if': 'cmIf',
			'customer_premises_info': 'customerPremisesInfo',
			'notification_type': 'notificationType',
			'time_stamp': 'timeStamp'
		}
		self._cm_if = cm_if
		self._customer_premises_info = customer_premises_info
		self._notification_type = notification_type
		self._time_stamp = time_stamp

	@classmethod
	def from_dict(cls, dikt) -> 'CmConnNotification':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The CmConnNotification of this CmConnNotification.  # noqa: E501
		:rtype: CmConnNotification
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def cm_if(self) -> List[CmConnNotificationCmIf]:
		"""Gets the cm_if of this CmConnNotification.


		:return: The cm_if of this CmConnNotification.
		:rtype: List[CmConnNotificationCmIf]
		"""
		return self._cm_if

	@cm_if.setter
	def cm_if(self, cm_if: List[CmConnNotificationCmIf]):
		"""Sets the cm_if of this CmConnNotification.


		:param cm_if: The cm_if of this CmConnNotification.
		:type cm_if: List[CmConnNotificationCmIf]
		"""
		if cm_if is None:
			raise ValueError("Invalid value for `cm_if`, must not be `None`")  # noqa: E501

		self._cm_if = cm_if

	@property
	def customer_premises_info(self) -> CpInfo:
		"""Gets the customer_premises_info of this CmConnNotification.


		:return: The customer_premises_info of this CmConnNotification.
		:rtype: CpInfo
		"""
		return self._customer_premises_info

	@customer_premises_info.setter
	def customer_premises_info(self, customer_premises_info: CpInfo):
		"""Sets the customer_premises_info of this CmConnNotification.


		:param customer_premises_info: The customer_premises_info of this CmConnNotification.
		:type customer_premises_info: CpInfo
		"""

		self._customer_premises_info = customer_premises_info

	@property
	def notification_type(self) -> str:
		"""Gets the notification_type of this CmConnNotification.

		Shall be set to \\\"CmconnNotification\\\".  # noqa: E501

		:return: The notification_type of this CmConnNotification.
		:rtype: str
		"""
		return self._notification_type

	@notification_type.setter
	def notification_type(self, notification_type: str):
		"""Sets the notification_type of this CmConnNotification.

		Shall be set to \\\"CmconnNotification\\\".  # noqa: E501

		:param notification_type: The notification_type of this CmConnNotification.
		:type notification_type: str
		"""
		if notification_type is None:
			raise ValueError("Invalid value for `notification_type`, must not be `None`")  # noqa: E501

		self._notification_type = notification_type

	@property
	def time_stamp(self) -> TimeStamp:
		"""Gets the time_stamp of this CmConnNotification.


		:return: The time_stamp of this CmConnNotification.
		:rtype: TimeStamp
		"""
		return self._time_stamp

	@time_stamp.setter
	def time_stamp(self, time_stamp: TimeStamp):
		"""Sets the time_stamp of this CmConnNotification.


		:param time_stamp: The time_stamp of this CmConnNotification.
		:type time_stamp: TimeStamp
		"""

		self._time_stamp = time_stamp
