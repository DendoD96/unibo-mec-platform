# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC029_fixed_access_information.download_diagnostics_diagnostics_state import \
	DownloadDiagnosticsDiagnosticsState  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC029_fixed_access_information.time_stamp import \
	TimeStamp  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class DownloadDiagnostics(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, b_om_time: TimeStamp = None, diagnostics_state: DownloadDiagnosticsDiagnosticsState = None,
	             download_uri: str = None, e_om_time: TimeStamp = None, r_om_time: TimeStamp = None,
	             t_cp_open_reponse_time: TimeStamp = None, t_cp_open_request_time: TimeStamp = None,
	             test_bytes_received: int = None, total_bytes_received: int = None):  # noqa: E501
		"""DownloadDiagnostics - a model defined in Swagger

		:param b_om_time: The b_om_time of this DownloadDiagnostics.  # noqa: E501
		:type b_om_time: TimeStamp
		:param diagnostics_state: The diagnostics_state of this DownloadDiagnostics.  # noqa: E501
		:type diagnostics_state: DownloadDiagnosticsDiagnosticsState
		:param download_uri: The download_uri of this DownloadDiagnostics.  # noqa: E501
		:type download_uri: str
		:param e_om_time: The e_om_time of this DownloadDiagnostics.  # noqa: E501
		:type e_om_time: TimeStamp
		:param r_om_time: The r_om_time of this DownloadDiagnostics.  # noqa: E501
		:type r_om_time: TimeStamp
		:param t_cp_open_reponse_time: The t_cp_open_reponse_time of this DownloadDiagnostics.  # noqa: E501
		:type t_cp_open_reponse_time: TimeStamp
		:param t_cp_open_request_time: The t_cp_open_request_time of this DownloadDiagnostics.  # noqa: E501
		:type t_cp_open_request_time: TimeStamp
		:param test_bytes_received: The test_bytes_received of this DownloadDiagnostics.  # noqa: E501
		:type test_bytes_received: int
		:param total_bytes_received: The total_bytes_received of this DownloadDiagnostics.  # noqa: E501
		:type total_bytes_received: int
		"""
		self.swagger_types = {
			'b_om_time': TimeStamp,
			'diagnostics_state': DownloadDiagnosticsDiagnosticsState,
			'download_uri': str,
			'e_om_time': TimeStamp,
			'r_om_time': TimeStamp,
			't_cp_open_reponse_time': TimeStamp,
			't_cp_open_request_time': TimeStamp,
			'test_bytes_received': int,
			'total_bytes_received': int
		}

		self.attribute_map = {
			'b_om_time': 'bOMTime',
			'diagnostics_state': 'diagnosticsState',
			'download_uri': 'downloadURI',
			'e_om_time': 'eOMTime',
			'r_om_time': 'rOMTime',
			't_cp_open_reponse_time': 'tCPOpenReponseTime',
			't_cp_open_request_time': 'tCPOpenRequestTime',
			'test_bytes_received': 'testBytesReceived',
			'total_bytes_received': 'totalBytesReceived'
		}
		self._b_om_time = b_om_time
		self._diagnostics_state = diagnostics_state
		self._download_uri = download_uri
		self._e_om_time = e_om_time
		self._r_om_time = r_om_time
		self._t_cp_open_reponse_time = t_cp_open_reponse_time
		self._t_cp_open_request_time = t_cp_open_request_time
		self._test_bytes_received = test_bytes_received
		self._total_bytes_received = total_bytes_received

	@classmethod
	def from_dict(cls, dikt) -> 'DownloadDiagnostics':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The DownloadDiagnostics of this DownloadDiagnostics.  # noqa: E501
		:rtype: DownloadDiagnostics
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def b_om_time(self) -> TimeStamp:
		"""Gets the b_om_time of this DownloadDiagnostics.


		:return: The b_om_time of this DownloadDiagnostics.
		:rtype: TimeStamp
		"""
		return self._b_om_time

	@b_om_time.setter
	def b_om_time(self, b_om_time: TimeStamp):
		"""Sets the b_om_time of this DownloadDiagnostics.


		:param b_om_time: The b_om_time of this DownloadDiagnostics.
		:type b_om_time: TimeStamp
		"""

		self._b_om_time = b_om_time

	@property
	def diagnostics_state(self) -> DownloadDiagnosticsDiagnosticsState:
		"""Gets the diagnostics_state of this DownloadDiagnostics.


		:return: The diagnostics_state of this DownloadDiagnostics.
		:rtype: DownloadDiagnosticsDiagnosticsState
		"""
		return self._diagnostics_state

	@diagnostics_state.setter
	def diagnostics_state(self, diagnostics_state: DownloadDiagnosticsDiagnosticsState):
		"""Sets the diagnostics_state of this DownloadDiagnostics.


		:param diagnostics_state: The diagnostics_state of this DownloadDiagnostics.
		:type diagnostics_state: DownloadDiagnosticsDiagnosticsState
		"""
		if diagnostics_state is None:
			raise ValueError("Invalid value for `diagnostics_state`, must not be `None`")  # noqa: E501

		self._diagnostics_state = diagnostics_state

	@property
	def download_uri(self) -> str:
		"""Gets the download_uri of this DownloadDiagnostics.

		The URI for the device to perform the download on.  # noqa: E501

		:return: The download_uri of this DownloadDiagnostics.
		:rtype: str
		"""
		return self._download_uri

	@download_uri.setter
	def download_uri(self, download_uri: str):
		"""Sets the download_uri of this DownloadDiagnostics.

		The URI for the device to perform the download on.  # noqa: E501

		:param download_uri: The download_uri of this DownloadDiagnostics.
		:type download_uri: str
		"""

		self._download_uri = download_uri

	@property
	def e_om_time(self) -> TimeStamp:
		"""Gets the e_om_time of this DownloadDiagnostics.


		:return: The e_om_time of this DownloadDiagnostics.
		:rtype: TimeStamp
		"""
		return self._e_om_time

	@e_om_time.setter
	def e_om_time(self, e_om_time: TimeStamp):
		"""Sets the e_om_time of this DownloadDiagnostics.


		:param e_om_time: The e_om_time of this DownloadDiagnostics.
		:type e_om_time: TimeStamp
		"""

		self._e_om_time = e_om_time

	@property
	def r_om_time(self) -> TimeStamp:
		"""Gets the r_om_time of this DownloadDiagnostics.


		:return: The r_om_time of this DownloadDiagnostics.
		:rtype: TimeStamp
		"""
		return self._r_om_time

	@r_om_time.setter
	def r_om_time(self, r_om_time: TimeStamp):
		"""Sets the r_om_time of this DownloadDiagnostics.


		:param r_om_time: The r_om_time of this DownloadDiagnostics.
		:type r_om_time: TimeStamp
		"""

		self._r_om_time = r_om_time

	@property
	def t_cp_open_reponse_time(self) -> TimeStamp:
		"""Gets the t_cp_open_reponse_time of this DownloadDiagnostics.


		:return: The t_cp_open_reponse_time of this DownloadDiagnostics.
		:rtype: TimeStamp
		"""
		return self._t_cp_open_reponse_time

	@t_cp_open_reponse_time.setter
	def t_cp_open_reponse_time(self, t_cp_open_reponse_time: TimeStamp):
		"""Sets the t_cp_open_reponse_time of this DownloadDiagnostics.


		:param t_cp_open_reponse_time: The t_cp_open_reponse_time of this DownloadDiagnostics.
		:type t_cp_open_reponse_time: TimeStamp
		"""

		self._t_cp_open_reponse_time = t_cp_open_reponse_time

	@property
	def t_cp_open_request_time(self) -> TimeStamp:
		"""Gets the t_cp_open_request_time of this DownloadDiagnostics.


		:return: The t_cp_open_request_time of this DownloadDiagnostics.
		:rtype: TimeStamp
		"""
		return self._t_cp_open_request_time

	@t_cp_open_request_time.setter
	def t_cp_open_request_time(self, t_cp_open_request_time: TimeStamp):
		"""Sets the t_cp_open_request_time of this DownloadDiagnostics.


		:param t_cp_open_request_time: The t_cp_open_request_time of this DownloadDiagnostics.
		:type t_cp_open_request_time: TimeStamp
		"""

		self._t_cp_open_request_time = t_cp_open_request_time

	@property
	def test_bytes_received(self) -> int:
		"""Gets the test_bytes_received of this DownloadDiagnostics.

		The test traffic received in bytes during the FTP/HTTP transaction including FTP/HTTP headers, between bOMTime and eOMTime.  # noqa: E501

		:return: The test_bytes_received of this DownloadDiagnostics.
		:rtype: int
		"""
		return self._test_bytes_received

	@test_bytes_received.setter
	def test_bytes_received(self, test_bytes_received: int):
		"""Sets the test_bytes_received of this DownloadDiagnostics.

		The test traffic received in bytes during the FTP/HTTP transaction including FTP/HTTP headers, between bOMTime and eOMTime.  # noqa: E501

		:param test_bytes_received: The test_bytes_received of this DownloadDiagnostics.
		:type test_bytes_received: int
		"""

		self._test_bytes_received = test_bytes_received

	@property
	def total_bytes_received(self) -> int:
		"""Gets the total_bytes_received of this DownloadDiagnostics.

		The total number of bytes received on the Interface between bOMTime and eOMTime.  # noqa: E501

		:return: The total_bytes_received of this DownloadDiagnostics.
		:rtype: int
		"""
		return self._total_bytes_received

	@total_bytes_received.setter
	def total_bytes_received(self, total_bytes_received: int):
		"""Sets the total_bytes_received of this DownloadDiagnostics.

		The total number of bytes received on the Interface between bOMTime and eOMTime.  # noqa: E501

		:param total_bytes_received: The total_bytes_received of this DownloadDiagnostics.
		:type total_bytes_received: int
		"""

		self._total_bytes_received = total_bytes_received
