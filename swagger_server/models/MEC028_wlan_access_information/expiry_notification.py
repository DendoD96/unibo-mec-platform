# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC028_wlan_access_information.expiry_notification_links import ExpiryNotificationLinks  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.time_stamp import TimeStamp  # noqa: F401,E501
from swagger_server import util


class ExpiryNotification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, links: ExpiryNotificationLinks=None, expiry_deadline: TimeStamp=None, notification_type: str=None):  # noqa: E501
        """ExpiryNotification - a model defined in Swagger

        :param links: The links of this ExpiryNotification.  # noqa: E501
        :type links: ExpiryNotificationLinks
        :param expiry_deadline: The expiry_deadline of this ExpiryNotification.  # noqa: E501
        :type expiry_deadline: TimeStamp
        :param notification_type: The notification_type of this ExpiryNotification.  # noqa: E501
        :type notification_type: str
        """
        self.swagger_types = {
            'links': ExpiryNotificationLinks,
            'expiry_deadline': TimeStamp,
            'notification_type': str
        }

        self.attribute_map = {
            'links': '_links',
            'expiry_deadline': 'expiryDeadline',
            'notification_type': 'notificationType'
        }
        self._links = links
        self._expiry_deadline = expiry_deadline
        self._notification_type = notification_type

    @classmethod
    def from_dict(cls, dikt) -> 'ExpiryNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExpiryNotification of this ExpiryNotification.  # noqa: E501
        :rtype: ExpiryNotification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> ExpiryNotificationLinks:
        """Gets the links of this ExpiryNotification.


        :return: The links of this ExpiryNotification.
        :rtype: ExpiryNotificationLinks
        """
        return self._links

    @links.setter
    def links(self, links: ExpiryNotificationLinks):
        """Sets the links of this ExpiryNotification.


        :param links: The links of this ExpiryNotification.
        :type links: ExpiryNotificationLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    @property
    def expiry_deadline(self) -> TimeStamp:
        """Gets the expiry_deadline of this ExpiryNotification.


        :return: The expiry_deadline of this ExpiryNotification.
        :rtype: TimeStamp
        """
        return self._expiry_deadline

    @expiry_deadline.setter
    def expiry_deadline(self, expiry_deadline: TimeStamp):
        """Sets the expiry_deadline of this ExpiryNotification.


        :param expiry_deadline: The expiry_deadline of this ExpiryNotification.
        :type expiry_deadline: TimeStamp
        """
        if expiry_deadline is None:
            raise ValueError("Invalid value for `expiry_deadline`, must not be `None`")  # noqa: E501

        self._expiry_deadline = expiry_deadline

    @property
    def notification_type(self) -> str:
        """Gets the notification_type of this ExpiryNotification.

        Shall be set to \"ExpiryNotification\".  # noqa: E501

        :return: The notification_type of this ExpiryNotification.
        :rtype: str
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type: str):
        """Sets the notification_type of this ExpiryNotification.

        Shall be set to \"ExpiryNotification\".  # noqa: E501

        :param notification_type: The notification_type of this ExpiryNotification.
        :type notification_type: str
        """
        if notification_type is None:
            raise ValueError("Invalid value for `notification_type`, must not be `None`")  # noqa: E501

        self._notification_type = notification_type
