# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SubscriptionLinkListSubscription(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, href: str = None, subscription_type: str = None):  # noqa: E501
		"""SubscriptionLinkListSubscription - a model defined in Swagger

		:param href: The href of this SubscriptionLinkListSubscription.  # noqa: E501
		:type href: str
		:param subscription_type: The subscription_type of this SubscriptionLinkListSubscription.  # noqa: E501
		:type subscription_type: str
		"""
		self.swagger_types = {
			'href': str,
			'subscription_type': str
		}

		self.attribute_map = {
			'href': 'href',
			'subscription_type': 'subscriptionType'
		}
		self._href = href
		self._subscription_type = subscription_type

	@classmethod
	def from_dict(cls, dikt) -> 'SubscriptionLinkListSubscription':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The SubscriptionLinkList_subscription of this SubscriptionLinkListSubscription.  # noqa: E501
		:rtype: SubscriptionLinkListSubscription
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def href(self) -> str:
		"""Gets the href of this SubscriptionLinkListSubscription.

		The URI referring to the subscription.  # noqa: E501

		:return: The href of this SubscriptionLinkListSubscription.
		:rtype: str
		"""
		return self._href

	@href.setter
	def href(self, href: str):
		"""Sets the href of this SubscriptionLinkListSubscription.

		The URI referring to the subscription.  # noqa: E501

		:param href: The href of this SubscriptionLinkListSubscription.
		:type href: str
		"""
		if href is None:
			raise ValueError("Invalid value for `href`, must not be `None`")  # noqa: E501

		self._href = href

	@property
	def subscription_type(self) -> str:
		"""Gets the subscription_type of this SubscriptionLinkListSubscription.

		Type of the subscription. The string shall be set according to the \"subscriptionType\" attribute of the associated subscription data type defined in 6.3.2, 6.3.3. and 6.3.5: “AssocStaSubscription” “StaDataRateSubscription” “MeasurementReportSubscription”  # noqa: E501

		:return: The subscription_type of this SubscriptionLinkListSubscription.
		:rtype: str
		"""
		return self._subscription_type

	@subscription_type.setter
	def subscription_type(self, subscription_type: str):
		"""Sets the subscription_type of this SubscriptionLinkListSubscription.

		Type of the subscription. The string shall be set according to the \"subscriptionType\" attribute of the associated subscription data type defined in 6.3.2, 6.3.3. and 6.3.5: “AssocStaSubscription” “StaDataRateSubscription” “MeasurementReportSubscription”  # noqa: E501

		:param subscription_type: The subscription_type of this SubscriptionLinkListSubscription.
		:type subscription_type: str
		"""
		if subscription_type is None:
			raise ValueError("Invalid value for `subscription_type`, must not be `None`")  # noqa: E501

		self._subscription_type = subscription_type
