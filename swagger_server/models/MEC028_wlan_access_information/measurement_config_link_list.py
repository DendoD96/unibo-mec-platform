# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC028_wlan_access_information.measurement_config_link_list_measurement_config import MeasurementConfigLinkListMeasurementConfig  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.measurement_config_links import MeasurementConfigLinks  # noqa: F401,E501
from swagger_server import util


class MeasurementConfigLinkList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, links: MeasurementConfigLinks=None, measurement_config: List[MeasurementConfigLinkListMeasurementConfig]=None):  # noqa: E501
        """MeasurementConfigLinkList - a model defined in Swagger

        :param links: The links of this MeasurementConfigLinkList.  # noqa: E501
        :type links: MeasurementConfigLinks
        :param measurement_config: The measurement_config of this MeasurementConfigLinkList.  # noqa: E501
        :type measurement_config: List[MeasurementConfigLinkListMeasurementConfig]
        """
        self.swagger_types = {
            'links': MeasurementConfigLinks,
            'measurement_config': List[MeasurementConfigLinkListMeasurementConfig]
        }

        self.attribute_map = {
            'links': '_links',
            'measurement_config': 'measurementConfig'
        }
        self._links = links
        self._measurement_config = measurement_config

    @classmethod
    def from_dict(cls, dikt) -> 'MeasurementConfigLinkList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MeasurementConfigLinkList of this MeasurementConfigLinkList.  # noqa: E501
        :rtype: MeasurementConfigLinkList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> MeasurementConfigLinks:
        """Gets the links of this MeasurementConfigLinkList.


        :return: The links of this MeasurementConfigLinkList.
        :rtype: MeasurementConfigLinks
        """
        return self._links

    @links.setter
    def links(self, links: MeasurementConfigLinks):
        """Sets the links of this MeasurementConfigLinkList.


        :param links: The links of this MeasurementConfigLinkList.
        :type links: MeasurementConfigLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    @property
    def measurement_config(self) -> List[MeasurementConfigLinkListMeasurementConfig]:
        """Gets the measurement_config of this MeasurementConfigLinkList.


        :return: The measurement_config of this MeasurementConfigLinkList.
        :rtype: List[MeasurementConfigLinkListMeasurementConfig]
        """
        return self._measurement_config

    @measurement_config.setter
    def measurement_config(self, measurement_config: List[MeasurementConfigLinkListMeasurementConfig]):
        """Sets the measurement_config of this MeasurementConfigLinkList.


        :param measurement_config: The measurement_config of this MeasurementConfigLinkList.
        :type measurement_config: List[MeasurementConfigLinkListMeasurementConfig]
        """

        self._measurement_config = measurement_config
