# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VhtCapabilities(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, vht_cap_info: int = None, vht_mcs_nss: int = None):  # noqa: E501
		"""VhtCapabilities - a model defined in Swagger

		:param vht_cap_info: The vht_cap_info of this VhtCapabilities.  # noqa: E501
		:type vht_cap_info: int
		:param vht_mcs_nss: The vht_mcs_nss of this VhtCapabilities.  # noqa: E501
		:type vht_mcs_nss: int
		"""
		self.swagger_types = {
			'vht_cap_info': int,
			'vht_mcs_nss': int
		}

		self.attribute_map = {
			'vht_cap_info': 'vhtCapInfo',
			'vht_mcs_nss': 'vhtMcsNss'
		}
		self._vht_cap_info = vht_cap_info
		self._vht_mcs_nss = vht_mcs_nss

	@classmethod
	def from_dict(cls, dikt) -> 'VhtCapabilities':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The VhtCapabilities of this VhtCapabilities.  # noqa: E501
		:rtype: VhtCapabilities
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def vht_cap_info(self) -> int:
		"""Gets the vht_cap_info of this VhtCapabilities.

		VHT capabilities Info as defined in IEEE 802.11-2016 [8].  # noqa: E501

		:return: The vht_cap_info of this VhtCapabilities.
		:rtype: int
		"""
		return self._vht_cap_info

	@vht_cap_info.setter
	def vht_cap_info(self, vht_cap_info: int):
		"""Sets the vht_cap_info of this VhtCapabilities.

		VHT capabilities Info as defined in IEEE 802.11-2016 [8].  # noqa: E501

		:param vht_cap_info: The vht_cap_info of this VhtCapabilities.
		:type vht_cap_info: int
		"""
		if vht_cap_info is None:
			raise ValueError("Invalid value for `vht_cap_info`, must not be `None`")  # noqa: E501

		self._vht_cap_info = vht_cap_info

	@property
	def vht_mcs_nss(self) -> int:
		"""Gets the vht_mcs_nss of this VhtCapabilities.

		Supported VHT-MCS and NSS Set as defined in IEEE 802.11-2016 [8].  # noqa: E501

		:return: The vht_mcs_nss of this VhtCapabilities.
		:rtype: int
		"""
		return self._vht_mcs_nss

	@vht_mcs_nss.setter
	def vht_mcs_nss(self, vht_mcs_nss: int):
		"""Sets the vht_mcs_nss of this VhtCapabilities.

		Supported VHT-MCS and NSS Set as defined in IEEE 802.11-2016 [8].  # noqa: E501

		:param vht_mcs_nss: The vht_mcs_nss of this VhtCapabilities.
		:type vht_mcs_nss: int
		"""
		if vht_mcs_nss is None:
			raise ValueError("Invalid value for `vht_mcs_nss`, must not be `None`")  # noqa: E501

		self._vht_mcs_nss = vht_mcs_nss
