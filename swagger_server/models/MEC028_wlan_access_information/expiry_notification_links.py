# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC028_wlan_access_information.link_type import \
	LinkType  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class ExpiryNotificationLinks(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, subscription: LinkType = None):  # noqa: E501
		"""ExpiryNotificationLinks - a model defined in Swagger

		:param subscription: The subscription of this ExpiryNotificationLinks.  # noqa: E501
		:type subscription: LinkType
		"""
		self.swagger_types = {
			'subscription': LinkType
		}

		self.attribute_map = {
			'subscription': 'subscription'
		}
		self._subscription = subscription

	@classmethod
	def from_dict(cls, dikt) -> 'ExpiryNotificationLinks':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The ExpiryNotification__links of this ExpiryNotificationLinks.  # noqa: E501
		:rtype: ExpiryNotificationLinks
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def subscription(self) -> LinkType:
		"""Gets the subscription of this ExpiryNotificationLinks.


		:return: The subscription of this ExpiryNotificationLinks.
		:rtype: LinkType
		"""
		return self._subscription

	@subscription.setter
	def subscription(self, subscription: LinkType):
		"""Sets the subscription of this ExpiryNotificationLinks.


		:param subscription: The subscription of this ExpiryNotificationLinks.
		:type subscription: LinkType
		"""
		if subscription is None:
			raise ValueError("Invalid value for `subscription`, must not be `None`")  # noqa: E501

		self._subscription = subscription
