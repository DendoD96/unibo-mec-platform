# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC028_wlan_access_information.dmg_capabilities import DmgCapabilities  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.edmg_capabilities import EdmgCapabilities  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.he_capabilities import HeCapabilities  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.ht_capabilities import HtCapabilities  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.vht_capabilities import VhtCapabilities  # noqa: F401,E501
from swagger_server import util


class WlanCapabilities(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, dmg: DmgCapabilities=None, edmg: EdmgCapabilities=None, he: HeCapabilities=None, ht: HtCapabilities=None, vht: VhtCapabilities=None):  # noqa: E501
        """WlanCapabilities - a model defined in Swagger

        :param dmg: The dmg of this WlanCapabilities.  # noqa: E501
        :type dmg: DmgCapabilities
        :param edmg: The edmg of this WlanCapabilities.  # noqa: E501
        :type edmg: EdmgCapabilities
        :param he: The he of this WlanCapabilities.  # noqa: E501
        :type he: HeCapabilities
        :param ht: The ht of this WlanCapabilities.  # noqa: E501
        :type ht: HtCapabilities
        :param vht: The vht of this WlanCapabilities.  # noqa: E501
        :type vht: VhtCapabilities
        """
        self.swagger_types = {
            'dmg': DmgCapabilities,
            'edmg': EdmgCapabilities,
            'he': HeCapabilities,
            'ht': HtCapabilities,
            'vht': VhtCapabilities
        }

        self.attribute_map = {
            'dmg': 'dmg',
            'edmg': 'edmg',
            'he': 'he',
            'ht': 'ht',
            'vht': 'vht'
        }
        self._dmg = dmg
        self._edmg = edmg
        self._he = he
        self._ht = ht
        self._vht = vht

    @classmethod
    def from_dict(cls, dikt) -> 'WlanCapabilities':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WlanCapabilities of this WlanCapabilities.  # noqa: E501
        :rtype: WlanCapabilities
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dmg(self) -> DmgCapabilities:
        """Gets the dmg of this WlanCapabilities.


        :return: The dmg of this WlanCapabilities.
        :rtype: DmgCapabilities
        """
        return self._dmg

    @dmg.setter
    def dmg(self, dmg: DmgCapabilities):
        """Sets the dmg of this WlanCapabilities.


        :param dmg: The dmg of this WlanCapabilities.
        :type dmg: DmgCapabilities
        """

        self._dmg = dmg

    @property
    def edmg(self) -> EdmgCapabilities:
        """Gets the edmg of this WlanCapabilities.


        :return: The edmg of this WlanCapabilities.
        :rtype: EdmgCapabilities
        """
        return self._edmg

    @edmg.setter
    def edmg(self, edmg: EdmgCapabilities):
        """Sets the edmg of this WlanCapabilities.


        :param edmg: The edmg of this WlanCapabilities.
        :type edmg: EdmgCapabilities
        """

        self._edmg = edmg

    @property
    def he(self) -> HeCapabilities:
        """Gets the he of this WlanCapabilities.


        :return: The he of this WlanCapabilities.
        :rtype: HeCapabilities
        """
        return self._he

    @he.setter
    def he(self, he: HeCapabilities):
        """Sets the he of this WlanCapabilities.


        :param he: The he of this WlanCapabilities.
        :type he: HeCapabilities
        """

        self._he = he

    @property
    def ht(self) -> HtCapabilities:
        """Gets the ht of this WlanCapabilities.


        :return: The ht of this WlanCapabilities.
        :rtype: HtCapabilities
        """
        return self._ht

    @ht.setter
    def ht(self, ht: HtCapabilities):
        """Sets the ht of this WlanCapabilities.


        :param ht: The ht of this WlanCapabilities.
        :type ht: HtCapabilities
        """

        self._ht = ht

    @property
    def vht(self) -> VhtCapabilities:
        """Gets the vht of this WlanCapabilities.


        :return: The vht of this WlanCapabilities.
        :rtype: VhtCapabilities
        """
        return self._vht

    @vht.setter
    def vht(self, vht: VhtCapabilities):
        """Sets the vht of this WlanCapabilities.


        :param vht: The vht of this WlanCapabilities.
        :type vht: VhtCapabilities
        """

        self._vht = vht
