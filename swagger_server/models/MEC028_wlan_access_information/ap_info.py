# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC028_wlan_access_information.ap_identity import ApIdentity  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.ap_location import ApLocation  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.bss_load import BssLoad  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.ext_bss_load import ExtBssLoad  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.o_bss_load import OBssLoad  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.time_stamp import TimeStamp  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.wan_metrics import WanMetrics  # noqa: F401,E501
from swagger_server.models.MEC028_wlan_access_information.wlan_capabilities import WlanCapabilities  # noqa: F401,E501
from swagger_server import util


class ApInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ap_id: ApIdentity=None, ap_location: ApLocation=None, bss_load: BssLoad=None, channel: int=None, ext_bss_load: ExtBssLoad=None, o_bss_load: OBssLoad=None, time_stamp: TimeStamp=None, wan_metrics: WanMetrics=None, wlan_cap: WlanCapabilities=None):  # noqa: E501
        """ApInfo - a model defined in Swagger

        :param ap_id: The ap_id of this ApInfo.  # noqa: E501
        :type ap_id: ApIdentity
        :param ap_location: The ap_location of this ApInfo.  # noqa: E501
        :type ap_location: ApLocation
        :param bss_load: The bss_load of this ApInfo.  # noqa: E501
        :type bss_load: BssLoad
        :param channel: The channel of this ApInfo.  # noqa: E501
        :type channel: int
        :param ext_bss_load: The ext_bss_load of this ApInfo.  # noqa: E501
        :type ext_bss_load: ExtBssLoad
        :param o_bss_load: The o_bss_load of this ApInfo.  # noqa: E501
        :type o_bss_load: OBssLoad
        :param time_stamp: The time_stamp of this ApInfo.  # noqa: E501
        :type time_stamp: TimeStamp
        :param wan_metrics: The wan_metrics of this ApInfo.  # noqa: E501
        :type wan_metrics: WanMetrics
        :param wlan_cap: The wlan_cap of this ApInfo.  # noqa: E501
        :type wlan_cap: WlanCapabilities
        """
        self.swagger_types = {
            'ap_id': ApIdentity,
            'ap_location': ApLocation,
            'bss_load': BssLoad,
            'channel': int,
            'ext_bss_load': ExtBssLoad,
            'o_bss_load': OBssLoad,
            'time_stamp': TimeStamp,
            'wan_metrics': WanMetrics,
            'wlan_cap': WlanCapabilities
        }

        self.attribute_map = {
            'ap_id': 'apId',
            'ap_location': 'apLocation',
            'bss_load': 'bssLoad',
            'channel': 'channel',
            'ext_bss_load': 'extBssLoad',
            'o_bss_load': 'oBssLoad',
            'time_stamp': 'timeStamp',
            'wan_metrics': 'wanMetrics',
            'wlan_cap': 'wlanCap'
        }
        self._ap_id = ap_id
        self._ap_location = ap_location
        self._bss_load = bss_load
        self._channel = channel
        self._ext_bss_load = ext_bss_load
        self._o_bss_load = o_bss_load
        self._time_stamp = time_stamp
        self._wan_metrics = wan_metrics
        self._wlan_cap = wlan_cap

    @classmethod
    def from_dict(cls, dikt) -> 'ApInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApInfo of this ApInfo.  # noqa: E501
        :rtype: ApInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ap_id(self) -> ApIdentity:
        """Gets the ap_id of this ApInfo.


        :return: The ap_id of this ApInfo.
        :rtype: ApIdentity
        """
        return self._ap_id

    @ap_id.setter
    def ap_id(self, ap_id: ApIdentity):
        """Sets the ap_id of this ApInfo.


        :param ap_id: The ap_id of this ApInfo.
        :type ap_id: ApIdentity
        """
        if ap_id is None:
            raise ValueError("Invalid value for `ap_id`, must not be `None`")  # noqa: E501

        self._ap_id = ap_id

    @property
    def ap_location(self) -> ApLocation:
        """Gets the ap_location of this ApInfo.


        :return: The ap_location of this ApInfo.
        :rtype: ApLocation
        """
        return self._ap_location

    @ap_location.setter
    def ap_location(self, ap_location: ApLocation):
        """Sets the ap_location of this ApInfo.


        :param ap_location: The ap_location of this ApInfo.
        :type ap_location: ApLocation
        """

        self._ap_location = ap_location

    @property
    def bss_load(self) -> BssLoad:
        """Gets the bss_load of this ApInfo.


        :return: The bss_load of this ApInfo.
        :rtype: BssLoad
        """
        return self._bss_load

    @bss_load.setter
    def bss_load(self, bss_load: BssLoad):
        """Sets the bss_load of this ApInfo.


        :param bss_load: The bss_load of this ApInfo.
        :type bss_load: BssLoad
        """

        self._bss_load = bss_load

    @property
    def channel(self) -> int:
        """Gets the channel of this ApInfo.

        Channel configured for the Access Point.  # noqa: E501

        :return: The channel of this ApInfo.
        :rtype: int
        """
        return self._channel

    @channel.setter
    def channel(self, channel: int):
        """Sets the channel of this ApInfo.

        Channel configured for the Access Point.  # noqa: E501

        :param channel: The channel of this ApInfo.
        :type channel: int
        """

        self._channel = channel

    @property
    def ext_bss_load(self) -> ExtBssLoad:
        """Gets the ext_bss_load of this ApInfo.


        :return: The ext_bss_load of this ApInfo.
        :rtype: ExtBssLoad
        """
        return self._ext_bss_load

    @ext_bss_load.setter
    def ext_bss_load(self, ext_bss_load: ExtBssLoad):
        """Sets the ext_bss_load of this ApInfo.


        :param ext_bss_load: The ext_bss_load of this ApInfo.
        :type ext_bss_load: ExtBssLoad
        """

        self._ext_bss_load = ext_bss_load

    @property
    def o_bss_load(self) -> OBssLoad:
        """Gets the o_bss_load of this ApInfo.


        :return: The o_bss_load of this ApInfo.
        :rtype: OBssLoad
        """
        return self._o_bss_load

    @o_bss_load.setter
    def o_bss_load(self, o_bss_load: OBssLoad):
        """Sets the o_bss_load of this ApInfo.


        :param o_bss_load: The o_bss_load of this ApInfo.
        :type o_bss_load: OBssLoad
        """

        self._o_bss_load = o_bss_load

    @property
    def time_stamp(self) -> TimeStamp:
        """Gets the time_stamp of this ApInfo.


        :return: The time_stamp of this ApInfo.
        :rtype: TimeStamp
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp: TimeStamp):
        """Sets the time_stamp of this ApInfo.


        :param time_stamp: The time_stamp of this ApInfo.
        :type time_stamp: TimeStamp
        """

        self._time_stamp = time_stamp

    @property
    def wan_metrics(self) -> WanMetrics:
        """Gets the wan_metrics of this ApInfo.


        :return: The wan_metrics of this ApInfo.
        :rtype: WanMetrics
        """
        return self._wan_metrics

    @wan_metrics.setter
    def wan_metrics(self, wan_metrics: WanMetrics):
        """Sets the wan_metrics of this ApInfo.


        :param wan_metrics: The wan_metrics of this ApInfo.
        :type wan_metrics: WanMetrics
        """

        self._wan_metrics = wan_metrics

    @property
    def wlan_cap(self) -> WlanCapabilities:
        """Gets the wlan_cap of this ApInfo.


        :return: The wlan_cap of this ApInfo.
        :rtype: WlanCapabilities
        """
        return self._wlan_cap

    @wlan_cap.setter
    def wlan_cap(self, wlan_cap: WlanCapabilities):
        """Sets the wlan_cap of this ApInfo.


        :param wlan_cap: The wlan_cap of this ApInfo.
        :type wlan_cap: WlanCapabilities
        """

        self._wlan_cap = wlan_cap
