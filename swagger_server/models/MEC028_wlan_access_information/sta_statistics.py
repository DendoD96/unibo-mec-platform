# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC028_wlan_access_information.sta_identity import \
	StaIdentity  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC028_wlan_access_information.sta_statistics_group2to9_data import \
	StaStatisticsGroup2to9Data  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC028_wlan_access_information.sta_statistics_group_one_data import \
	StaStatisticsGroupOneData  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC028_wlan_access_information.sta_statistics_group_zero_data import \
	StaStatisticsGroupZeroData  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class StaStatistics(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, group2to9_data: StaStatisticsGroup2to9Data = None, group_identity: int = None,
	             group_one_data: StaStatisticsGroupOneData = None, group_zero_data: StaStatisticsGroupZeroData = None,
	             measurement_duration: int = None, measurement_id: str = None,
	             sta_id: StaIdentity = None):  # noqa: E501
		"""StaStatistics - a model defined in Swagger

		:param group2to9_data: The group2to9_data of this StaStatistics.  # noqa: E501
		:type group2to9_data: StaStatisticsGroup2to9Data
		:param group_identity: The group_identity of this StaStatistics.  # noqa: E501
		:type group_identity: int
		:param group_one_data: The group_one_data of this StaStatistics.  # noqa: E501
		:type group_one_data: StaStatisticsGroupOneData
		:param group_zero_data: The group_zero_data of this StaStatistics.  # noqa: E501
		:type group_zero_data: StaStatisticsGroupZeroData
		:param measurement_duration: The measurement_duration of this StaStatistics.  # noqa: E501
		:type measurement_duration: int
		:param measurement_id: The measurement_id of this StaStatistics.  # noqa: E501
		:type measurement_id: str
		:param sta_id: The sta_id of this StaStatistics.  # noqa: E501
		:type sta_id: StaIdentity
		"""
		self.swagger_types = {
			'group2to9_data': StaStatisticsGroup2to9Data,
			'group_identity': int,
			'group_one_data': StaStatisticsGroupOneData,
			'group_zero_data': StaStatisticsGroupZeroData,
			'measurement_duration': int,
			'measurement_id': str,
			'sta_id': StaIdentity
		}

		self.attribute_map = {
			'group2to9_data': 'group2to9Data',
			'group_identity': 'groupIdentity',
			'group_one_data': 'groupOneData',
			'group_zero_data': 'groupZeroData',
			'measurement_duration': 'measurementDuration',
			'measurement_id': 'measurementId',
			'sta_id': 'staId'
		}
		self._group2to9_data = group2to9_data
		self._group_identity = group_identity
		self._group_one_data = group_one_data
		self._group_zero_data = group_zero_data
		self._measurement_duration = measurement_duration
		self._measurement_id = measurement_id
		self._sta_id = sta_id

	@classmethod
	def from_dict(cls, dikt) -> 'StaStatistics':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The StaStatistics of this StaStatistics.  # noqa: E501
		:rtype: StaStatistics
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def group2to9_data(self) -> StaStatisticsGroup2to9Data:
		"""Gets the group2to9_data of this StaStatistics.


		:return: The group2to9_data of this StaStatistics.
		:rtype: StaStatisticsGroup2to9Data
		"""
		return self._group2to9_data

	@group2to9_data.setter
	def group2to9_data(self, group2to9_data: StaStatisticsGroup2to9Data):
		"""Sets the group2to9_data of this StaStatistics.


		:param group2to9_data: The group2to9_data of this StaStatistics.
		:type group2to9_data: StaStatisticsGroup2to9Data
		"""

		self._group2to9_data = group2to9_data

	@property
	def group_identity(self) -> int:
		"""Gets the group_identity of this StaStatistics.

		Indicates the requested statistics group describing the Statistics Group Data according to Table 9-114 of IEEE 802.11-2016 [8]. Depending on group identity, one and only one of the STA Statistics Group Data will be present.  # noqa: E501

		:return: The group_identity of this StaStatistics.
		:rtype: int
		"""
		return self._group_identity

	@group_identity.setter
	def group_identity(self, group_identity: int):
		"""Sets the group_identity of this StaStatistics.

		Indicates the requested statistics group describing the Statistics Group Data according to Table 9-114 of IEEE 802.11-2016 [8]. Depending on group identity, one and only one of the STA Statistics Group Data will be present.  # noqa: E501

		:param group_identity: The group_identity of this StaStatistics.
		:type group_identity: int
		"""
		if group_identity is None:
			raise ValueError("Invalid value for `group_identity`, must not be `None`")  # noqa: E501

		self._group_identity = group_identity

	@property
	def group_one_data(self) -> StaStatisticsGroupOneData:
		"""Gets the group_one_data of this StaStatistics.


		:return: The group_one_data of this StaStatistics.
		:rtype: StaStatisticsGroupOneData
		"""
		return self._group_one_data

	@group_one_data.setter
	def group_one_data(self, group_one_data: StaStatisticsGroupOneData):
		"""Sets the group_one_data of this StaStatistics.


		:param group_one_data: The group_one_data of this StaStatistics.
		:type group_one_data: StaStatisticsGroupOneData
		"""

		self._group_one_data = group_one_data

	@property
	def group_zero_data(self) -> StaStatisticsGroupZeroData:
		"""Gets the group_zero_data of this StaStatistics.


		:return: The group_zero_data of this StaStatistics.
		:rtype: StaStatisticsGroupZeroData
		"""
		return self._group_zero_data

	@group_zero_data.setter
	def group_zero_data(self, group_zero_data: StaStatisticsGroupZeroData):
		"""Sets the group_zero_data of this StaStatistics.


		:param group_zero_data: The group_zero_data of this StaStatistics.
		:type group_zero_data: StaStatisticsGroupZeroData
		"""

		self._group_zero_data = group_zero_data

	@property
	def measurement_duration(self) -> int:
		"""Gets the measurement_duration of this StaStatistics.

		Duration over which the Statistics Group Data was measured in time units of 1 024 µs. Duration equal to zero indicates a report of current values.  # noqa: E501

		:return: The measurement_duration of this StaStatistics.
		:rtype: int
		"""
		return self._measurement_duration

	@measurement_duration.setter
	def measurement_duration(self, measurement_duration: int):
		"""Sets the measurement_duration of this StaStatistics.

		Duration over which the Statistics Group Data was measured in time units of 1 024 µs. Duration equal to zero indicates a report of current values.  # noqa: E501

		:param measurement_duration: The measurement_duration of this StaStatistics.
		:type measurement_duration: int
		"""
		if measurement_duration is None:
			raise ValueError("Invalid value for `measurement_duration`, must not be `None`")  # noqa: E501

		self._measurement_duration = measurement_duration

	@property
	def measurement_id(self) -> str:
		"""Gets the measurement_id of this StaStatistics.

		Measurement ID of the Measurement configuration applied to this STA Statistics Report.  # noqa: E501

		:return: The measurement_id of this StaStatistics.
		:rtype: str
		"""
		return self._measurement_id

	@measurement_id.setter
	def measurement_id(self, measurement_id: str):
		"""Sets the measurement_id of this StaStatistics.

		Measurement ID of the Measurement configuration applied to this STA Statistics Report.  # noqa: E501

		:param measurement_id: The measurement_id of this StaStatistics.
		:type measurement_id: str
		"""
		if measurement_id is None:
			raise ValueError("Invalid value for `measurement_id`, must not be `None`")  # noqa: E501

		self._measurement_id = measurement_id

	@property
	def sta_id(self) -> StaIdentity:
		"""Gets the sta_id of this StaStatistics.


		:return: The sta_id of this StaStatistics.
		:rtype: StaIdentity
		"""
		return self._sta_id

	@sta_id.setter
	def sta_id(self, sta_id: StaIdentity):
		"""Sets the sta_id of this StaStatistics.


		:param sta_id: The sta_id of this StaStatistics.
		:type sta_id: StaIdentity
		"""

		self._sta_id = sta_id
