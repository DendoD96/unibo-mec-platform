# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MtsSessionInfoFlowFilter(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, dscp: int = None, dst_ip: str = None, dst_port: List[int] = None, flowlabel: int = None,
	             protocol: int = None, source_ip: str = None, source_port: List[int] = None):  # noqa: E501
		"""MtsSessionInfoFlowFilter - a model defined in Swagger

		:param dscp: The dscp of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type dscp: int
		:param dst_ip: The dst_ip of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type dst_ip: str
		:param dst_port: The dst_port of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type dst_port: List[int]
		:param flowlabel: The flowlabel of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type flowlabel: int
		:param protocol: The protocol of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type protocol: int
		:param source_ip: The source_ip of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type source_ip: str
		:param source_port: The source_port of this MtsSessionInfoFlowFilter.  # noqa: E501
		:type source_port: List[int]
		"""
		self.swagger_types = {
			'dscp': int,
			'dst_ip': str,
			'dst_port': List[int],
			'flowlabel': int,
			'protocol': int,
			'source_ip': str,
			'source_port': List[int]
		}

		self.attribute_map = {
			'dscp': 'dscp',
			'dst_ip': 'dstIp',
			'dst_port': 'dstPort',
			'flowlabel': 'flowlabel',
			'protocol': 'protocol',
			'source_ip': 'sourceIp',
			'source_port': 'sourcePort'
		}
		self._dscp = dscp
		self._dst_ip = dst_ip
		self._dst_port = dst_port
		self._flowlabel = flowlabel
		self._protocol = protocol
		self._source_ip = source_ip
		self._source_port = source_port

	@classmethod
	def from_dict(cls, dikt) -> 'MtsSessionInfoFlowFilter':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The MtsSessionInfo_flowFilter of this MtsSessionInfoFlowFilter.  # noqa: E501
		:rtype: MtsSessionInfoFlowFilter
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def dscp(self) -> int:
		"""Gets the dscp of this MtsSessionInfoFlowFilter.

		DSCP in the IPv4 header or Traffic Class in the IPv6 header  # noqa: E501

		:return: The dscp of this MtsSessionInfoFlowFilter.
		:rtype: int
		"""
		return self._dscp

	@dscp.setter
	def dscp(self, dscp: int):
		"""Sets the dscp of this MtsSessionInfoFlowFilter.

		DSCP in the IPv4 header or Traffic Class in the IPv6 header  # noqa: E501

		:param dscp: The dscp of this MtsSessionInfoFlowFilter.
		:type dscp: int
		"""

		self._dscp = dscp

	@property
	def dst_ip(self) -> str:
		"""Gets the dst_ip of this MtsSessionInfoFlowFilter.

		Destination address identity of session (including range)  # noqa: E501

		:return: The dst_ip of this MtsSessionInfoFlowFilter.
		:rtype: str
		"""
		return self._dst_ip

	@dst_ip.setter
	def dst_ip(self, dst_ip: str):
		"""Sets the dst_ip of this MtsSessionInfoFlowFilter.

		Destination address identity of session (including range)  # noqa: E501

		:param dst_ip: The dst_ip of this MtsSessionInfoFlowFilter.
		:type dst_ip: str
		"""

		self._dst_ip = dst_ip

	@property
	def dst_port(self) -> List[int]:
		"""Gets the dst_port of this MtsSessionInfoFlowFilter.

		Destination port identity of session  # noqa: E501

		:return: The dst_port of this MtsSessionInfoFlowFilter.
		:rtype: List[int]
		"""
		return self._dst_port

	@dst_port.setter
	def dst_port(self, dst_port: List[int]):
		"""Sets the dst_port of this MtsSessionInfoFlowFilter.

		Destination port identity of session  # noqa: E501

		:param dst_port: The dst_port of this MtsSessionInfoFlowFilter.
		:type dst_port: List[int]
		"""

		self._dst_port = dst_port

	@property
	def flowlabel(self) -> int:
		"""Gets the flowlabel of this MtsSessionInfoFlowFilter.

		Flow Label in the IPv6 header, applicable only if the flow is IPv6  # noqa: E501

		:return: The flowlabel of this MtsSessionInfoFlowFilter.
		:rtype: int
		"""
		return self._flowlabel

	@flowlabel.setter
	def flowlabel(self, flowlabel: int):
		"""Sets the flowlabel of this MtsSessionInfoFlowFilter.

		Flow Label in the IPv6 header, applicable only if the flow is IPv6  # noqa: E501

		:param flowlabel: The flowlabel of this MtsSessionInfoFlowFilter.
		:type flowlabel: int
		"""

		self._flowlabel = flowlabel

	@property
	def protocol(self) -> int:
		"""Gets the protocol of this MtsSessionInfoFlowFilter.

		Protocol number  # noqa: E501

		:return: The protocol of this MtsSessionInfoFlowFilter.
		:rtype: int
		"""
		return self._protocol

	@protocol.setter
	def protocol(self, protocol: int):
		"""Sets the protocol of this MtsSessionInfoFlowFilter.

		Protocol number  # noqa: E501

		:param protocol: The protocol of this MtsSessionInfoFlowFilter.
		:type protocol: int
		"""

		self._protocol = protocol

	@property
	def source_ip(self) -> str:
		"""Gets the source_ip of this MtsSessionInfoFlowFilter.

		Source address identity of session (including range)  # noqa: E501

		:return: The source_ip of this MtsSessionInfoFlowFilter.
		:rtype: str
		"""
		return self._source_ip

	@source_ip.setter
	def source_ip(self, source_ip: str):
		"""Sets the source_ip of this MtsSessionInfoFlowFilter.

		Source address identity of session (including range)  # noqa: E501

		:param source_ip: The source_ip of this MtsSessionInfoFlowFilter.
		:type source_ip: str
		"""

		self._source_ip = source_ip

	@property
	def source_port(self) -> List[int]:
		"""Gets the source_port of this MtsSessionInfoFlowFilter.

		Source port identity of session  # noqa: E501

		:return: The source_port of this MtsSessionInfoFlowFilter.
		:rtype: List[int]
		"""
		return self._source_port

	@source_port.setter
	def source_port(self, source_port: List[int]):
		"""Sets the source_port of this MtsSessionInfoFlowFilter.

		Source port identity of session  # noqa: E501

		:param source_port: The source_port of this MtsSessionInfoFlowFilter.
		:type source_port: List[int]
		"""

		self._source_port = source_port
