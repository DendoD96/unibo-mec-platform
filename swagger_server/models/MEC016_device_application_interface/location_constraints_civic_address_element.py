# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LocationConstraintsCivicAddressElement(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, ca_type: int = None, ca_value: str = None):  # noqa: E501
		"""LocationConstraintsCivicAddressElement - a model defined in Swagger

		:param ca_type: The ca_type of this LocationConstraintsCivicAddressElement.  # noqa: E501
		:type ca_type: int
		:param ca_value: The ca_value of this LocationConstraintsCivicAddressElement.  # noqa: E501
		:type ca_value: str
		"""
		self.swagger_types = {
			'ca_type': int,
			'ca_value': str
		}

		self.attribute_map = {
			'ca_type': 'caType',
			'ca_value': 'caValue'
		}
		self._ca_type = ca_type
		self._ca_value = ca_value

	@classmethod
	def from_dict(cls, dikt) -> 'LocationConstraintsCivicAddressElement':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The LocationConstraints_civicAddressElement of this LocationConstraintsCivicAddressElement.  # noqa: E501
		:rtype: LocationConstraintsCivicAddressElement
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def ca_type(self) -> int:
		"""Gets the ca_type of this LocationConstraintsCivicAddressElement.

		Describe the content type of caValue. The value of caType shall comply with section 3.4 of IETF RFC 4776 [6].   # noqa: E501

		:return: The ca_type of this LocationConstraintsCivicAddressElement.
		:rtype: int
		"""
		return self._ca_type

	@ca_type.setter
	def ca_type(self, ca_type: int):
		"""Sets the ca_type of this LocationConstraintsCivicAddressElement.

		Describe the content type of caValue. The value of caType shall comply with section 3.4 of IETF RFC 4776 [6].   # noqa: E501

		:param ca_type: The ca_type of this LocationConstraintsCivicAddressElement.
		:type ca_type: int
		"""

		self._ca_type = ca_type

	@property
	def ca_value(self) -> str:
		"""Gets the ca_value of this LocationConstraintsCivicAddressElement.

		Content of civic address element corresponding to the caType. The format caValue shall comply with section 3.4 of IETF RFC 4776 [6].  # noqa: E501

		:return: The ca_value of this LocationConstraintsCivicAddressElement.
		:rtype: str
		"""
		return self._ca_value

	@ca_value.setter
	def ca_value(self, ca_value: str):
		"""Sets the ca_value of this LocationConstraintsCivicAddressElement.

		Content of civic address element corresponding to the caType. The format caValue shall comply with section 3.4 of IETF RFC 4776 [6].  # noqa: E501

		:param ca_value: The ca_value of this LocationConstraintsCivicAddressElement.
		:type ca_value: str
		"""

		self._ca_value = ca_value
