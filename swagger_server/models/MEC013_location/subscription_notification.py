# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC013_location.distance_criteria import \
	DistanceCriteria  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.entering_leaving_criteria import \
	EnteringLeavingCriteria  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.link import Link  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.terminal_location import \
	TerminalLocation  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class SubscriptionNotification(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, callback_data: str = None, distance_criteria: DistanceCriteria = None,
	             entering_leaving_criteria: EnteringLeavingCriteria = None, is_final_notification: bool = None,
	             link: List[Link] = None, terminal_location: List[TerminalLocation] = None):  # noqa: E501
		"""SubscriptionNotification - a model defined in Swagger

		:param callback_data: The callback_data of this SubscriptionNotification.  # noqa: E501
		:type callback_data: str
		:param distance_criteria: The distance_criteria of this SubscriptionNotification.  # noqa: E501
		:type distance_criteria: DistanceCriteria
		:param entering_leaving_criteria: The entering_leaving_criteria of this SubscriptionNotification.  # noqa: E501
		:type entering_leaving_criteria: EnteringLeavingCriteria
		:param is_final_notification: The is_final_notification of this SubscriptionNotification.  # noqa: E501
		:type is_final_notification: bool
		:param link: The link of this SubscriptionNotification.  # noqa: E501
		:type link: List[Link]
		:param terminal_location: The terminal_location of this SubscriptionNotification.  # noqa: E501
		:type terminal_location: List[TerminalLocation]
		"""
		self.swagger_types = {
			'callback_data': str,
			'distance_criteria': DistanceCriteria,
			'entering_leaving_criteria': EnteringLeavingCriteria,
			'is_final_notification': bool,
			'link': List[Link],
			'terminal_location': List[TerminalLocation]
		}

		self.attribute_map = {
			'callback_data': 'callbackData',
			'distance_criteria': 'distanceCriteria',
			'entering_leaving_criteria': 'enteringLeavingCriteria',
			'is_final_notification': 'isFinalNotification',
			'link': 'link',
			'terminal_location': 'terminalLocation'
		}
		self._callback_data = callback_data
		self._distance_criteria = distance_criteria
		self._entering_leaving_criteria = entering_leaving_criteria
		self._is_final_notification = is_final_notification
		self._link = link
		self._terminal_location = terminal_location

	@classmethod
	def from_dict(cls, dikt) -> 'SubscriptionNotification':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The SubscriptionNotification of this SubscriptionNotification.  # noqa: E501
		:rtype: SubscriptionNotification
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def callback_data(self) -> str:
		"""Gets the callback_data of this SubscriptionNotification.

		CallbackData if passed by the application in the receiptRequest element during the associated subscription operation  # noqa: E501

		:return: The callback_data of this SubscriptionNotification.
		:rtype: str
		"""
		return self._callback_data

	@callback_data.setter
	def callback_data(self, callback_data: str):
		"""Sets the callback_data of this SubscriptionNotification.

		CallbackData if passed by the application in the receiptRequest element during the associated subscription operation  # noqa: E501

		:param callback_data: The callback_data of this SubscriptionNotification.
		:type callback_data: str
		"""

		self._callback_data = callback_data

	@property
	def distance_criteria(self) -> DistanceCriteria:
		"""Gets the distance_criteria of this SubscriptionNotification.


		:return: The distance_criteria of this SubscriptionNotification.
		:rtype: DistanceCriteria
		"""
		return self._distance_criteria

	@distance_criteria.setter
	def distance_criteria(self, distance_criteria: DistanceCriteria):
		"""Sets the distance_criteria of this SubscriptionNotification.


		:param distance_criteria: The distance_criteria of this SubscriptionNotification.
		:type distance_criteria: DistanceCriteria
		"""

		self._distance_criteria = distance_criteria

	@property
	def entering_leaving_criteria(self) -> EnteringLeavingCriteria:
		"""Gets the entering_leaving_criteria of this SubscriptionNotification.


		:return: The entering_leaving_criteria of this SubscriptionNotification.
		:rtype: EnteringLeavingCriteria
		"""
		return self._entering_leaving_criteria

	@entering_leaving_criteria.setter
	def entering_leaving_criteria(self, entering_leaving_criteria: EnteringLeavingCriteria):
		"""Sets the entering_leaving_criteria of this SubscriptionNotification.


		:param entering_leaving_criteria: The entering_leaving_criteria of this SubscriptionNotification.
		:type entering_leaving_criteria: EnteringLeavingCriteria
		"""

		self._entering_leaving_criteria = entering_leaving_criteria

	@property
	def is_final_notification(self) -> bool:
		"""Gets the is_final_notification of this SubscriptionNotification.

		Set to true if it is a final notification about location change.  # noqa: E501

		:return: The is_final_notification of this SubscriptionNotification.
		:rtype: bool
		"""
		return self._is_final_notification

	@is_final_notification.setter
	def is_final_notification(self, is_final_notification: bool):
		"""Sets the is_final_notification of this SubscriptionNotification.

		Set to true if it is a final notification about location change.  # noqa: E501

		:param is_final_notification: The is_final_notification of this SubscriptionNotification.
		:type is_final_notification: bool
		"""

		self._is_final_notification = is_final_notification

	@property
	def link(self) -> List[Link]:
		"""Gets the link of this SubscriptionNotification.

		Link to other resources that are in relationship with the resource.  # noqa: E501

		:return: The link of this SubscriptionNotification.
		:rtype: List[Link]
		"""
		return self._link

	@link.setter
	def link(self, link: List[Link]):
		"""Sets the link of this SubscriptionNotification.

		Link to other resources that are in relationship with the resource.  # noqa: E501

		:param link: The link of this SubscriptionNotification.
		:type link: List[Link]
		"""

		self._link = link

	@property
	def terminal_location(self) -> List[TerminalLocation]:
		"""Gets the terminal_location of this SubscriptionNotification.

		Collection of the terminal locations.  # noqa: E501

		:return: The terminal_location of this SubscriptionNotification.
		:rtype: List[TerminalLocation]
		"""
		return self._terminal_location

	@terminal_location.setter
	def terminal_location(self, terminal_location: List[TerminalLocation]):
		"""Sets the terminal_location of this SubscriptionNotification.

		Collection of the terminal locations.  # noqa: E501

		:param terminal_location: The terminal_location of this SubscriptionNotification.
		:type terminal_location: List[TerminalLocation]
		"""
		if terminal_location is None:
			raise ValueError("Invalid value for `terminal_location`, must not be `None`")  # noqa: E501

		self._terminal_location = terminal_location
