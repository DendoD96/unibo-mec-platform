# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC013_location.callback_reference import \
	CallbackReference  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.link import Link  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class PeriodicNotificationSubscription(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, address: List[str] = None, callback_reference: CallbackReference = None,
	             client_correlator: str = None, duration: int = None, frequency: int = None, link: List[Link] = None,
	             requested_accuracy: int = None, requester: str = None, resource_url: str = None):  # noqa: E501
		"""PeriodicNotificationSubscription - a model defined in Swagger

		:param address: The address of this PeriodicNotificationSubscription.  # noqa: E501
		:type address: List[str]
		:param callback_reference: The callback_reference of this PeriodicNotificationSubscription.  # noqa: E501
		:type callback_reference: CallbackReference
		:param client_correlator: The client_correlator of this PeriodicNotificationSubscription.  # noqa: E501
		:type client_correlator: str
		:param duration: The duration of this PeriodicNotificationSubscription.  # noqa: E501
		:type duration: int
		:param frequency: The frequency of this PeriodicNotificationSubscription.  # noqa: E501
		:type frequency: int
		:param link: The link of this PeriodicNotificationSubscription.  # noqa: E501
		:type link: List[Link]
		:param requested_accuracy: The requested_accuracy of this PeriodicNotificationSubscription.  # noqa: E501
		:type requested_accuracy: int
		:param requester: The requester of this PeriodicNotificationSubscription.  # noqa: E501
		:type requester: str
		:param resource_url: The resource_url of this PeriodicNotificationSubscription.  # noqa: E501
		:type resource_url: str
		"""
		self.swagger_types = {
			'address': List[str],
			'callback_reference': CallbackReference,
			'client_correlator': str,
			'duration': int,
			'frequency': int,
			'link': List[Link],
			'requested_accuracy': int,
			'requester': str,
			'resource_url': str
		}

		self.attribute_map = {
			'address': 'address',
			'callback_reference': 'callbackReference',
			'client_correlator': 'clientCorrelator',
			'duration': 'duration',
			'frequency': 'frequency',
			'link': 'link',
			'requested_accuracy': 'requestedAccuracy',
			'requester': 'requester',
			'resource_url': 'resourceURL'
		}
		self._address = address
		self._callback_reference = callback_reference
		self._client_correlator = client_correlator
		self._duration = duration
		self._frequency = frequency
		self._link = link
		self._requested_accuracy = requested_accuracy
		self._requester = requester
		self._resource_url = resource_url

	@classmethod
	def from_dict(cls, dikt) -> 'PeriodicNotificationSubscription':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The PeriodicNotificationSubscription of this PeriodicNotificationSubscription.  # noqa: E501
		:rtype: PeriodicNotificationSubscription
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def address(self) -> List[str]:
		"""Gets the address of this PeriodicNotificationSubscription.

		Address of terminals to monitor (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)  # noqa: E501

		:return: The address of this PeriodicNotificationSubscription.
		:rtype: List[str]
		"""
		return self._address

	@address.setter
	def address(self, address: List[str]):
		"""Sets the address of this PeriodicNotificationSubscription.

		Address of terminals to monitor (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)  # noqa: E501

		:param address: The address of this PeriodicNotificationSubscription.
		:type address: List[str]
		"""
		if address is None:
			raise ValueError("Invalid value for `address`, must not be `None`")  # noqa: E501

		self._address = address

	@property
	def callback_reference(self) -> CallbackReference:
		"""Gets the callback_reference of this PeriodicNotificationSubscription.


		:return: The callback_reference of this PeriodicNotificationSubscription.
		:rtype: CallbackReference
		"""
		return self._callback_reference

	@callback_reference.setter
	def callback_reference(self, callback_reference: CallbackReference):
		"""Sets the callback_reference of this PeriodicNotificationSubscription.


		:param callback_reference: The callback_reference of this PeriodicNotificationSubscription.
		:type callback_reference: CallbackReference
		"""
		if callback_reference is None:
			raise ValueError("Invalid value for `callback_reference`, must not be `None`")  # noqa: E501

		self._callback_reference = callback_reference

	@property
	def client_correlator(self) -> str:
		"""Gets the client_correlator of this PeriodicNotificationSubscription.

		A correlator that the client can use to tag this particular resource representation during a request to create a resource on the server.  # noqa: E501

		:return: The client_correlator of this PeriodicNotificationSubscription.
		:rtype: str
		"""
		return self._client_correlator

	@client_correlator.setter
	def client_correlator(self, client_correlator: str):
		"""Sets the client_correlator of this PeriodicNotificationSubscription.

		A correlator that the client can use to tag this particular resource representation during a request to create a resource on the server.  # noqa: E501

		:param client_correlator: The client_correlator of this PeriodicNotificationSubscription.
		:type client_correlator: str
		"""

		self._client_correlator = client_correlator

	@property
	def duration(self) -> int:
		"""Gets the duration of this PeriodicNotificationSubscription.

		Period of time (in seconds) notifications are provided for. If set to “0” (zero), a default duration time, which is specified by the service policy, will be used. If the parameter is omitted, the notifications will continue until the maximum duration time, which is specified by the service policy, unless the notifications are stopped by deletion of subscription for notifications.  # noqa: E501

		:return: The duration of this PeriodicNotificationSubscription.
		:rtype: int
		"""
		return self._duration

	@duration.setter
	def duration(self, duration: int):
		"""Sets the duration of this PeriodicNotificationSubscription.

		Period of time (in seconds) notifications are provided for. If set to “0” (zero), a default duration time, which is specified by the service policy, will be used. If the parameter is omitted, the notifications will continue until the maximum duration time, which is specified by the service policy, unless the notifications are stopped by deletion of subscription for notifications.  # noqa: E501

		:param duration: The duration of this PeriodicNotificationSubscription.
		:type duration: int
		"""

		self._duration = duration

	@property
	def frequency(self) -> int:
		"""Gets the frequency of this PeriodicNotificationSubscription.

		Maximum frequency (in seconds) of notifications (can also be considered minimum time between notifications) per subscription.  # noqa: E501

		:return: The frequency of this PeriodicNotificationSubscription.
		:rtype: int
		"""
		return self._frequency

	@frequency.setter
	def frequency(self, frequency: int):
		"""Sets the frequency of this PeriodicNotificationSubscription.

		Maximum frequency (in seconds) of notifications (can also be considered minimum time between notifications) per subscription.  # noqa: E501

		:param frequency: The frequency of this PeriodicNotificationSubscription.
		:type frequency: int
		"""
		if frequency is None:
			raise ValueError("Invalid value for `frequency`, must not be `None`")  # noqa: E501

		self._frequency = frequency

	@property
	def link(self) -> List[Link]:
		"""Gets the link of this PeriodicNotificationSubscription.

		Link to other resources that are in relationship with the resource.  # noqa: E501

		:return: The link of this PeriodicNotificationSubscription.
		:rtype: List[Link]
		"""
		return self._link

	@link.setter
	def link(self, link: List[Link]):
		"""Sets the link of this PeriodicNotificationSubscription.

		Link to other resources that are in relationship with the resource.  # noqa: E501

		:param link: The link of this PeriodicNotificationSubscription.
		:type link: List[Link]
		"""

		self._link = link

	@property
	def requested_accuracy(self) -> int:
		"""Gets the requested_accuracy of this PeriodicNotificationSubscription.

		Accuracy of the provided distance in meters.  # noqa: E501

		:return: The requested_accuracy of this PeriodicNotificationSubscription.
		:rtype: int
		"""
		return self._requested_accuracy

	@requested_accuracy.setter
	def requested_accuracy(self, requested_accuracy: int):
		"""Sets the requested_accuracy of this PeriodicNotificationSubscription.

		Accuracy of the provided distance in meters.  # noqa: E501

		:param requested_accuracy: The requested_accuracy of this PeriodicNotificationSubscription.
		:type requested_accuracy: int
		"""
		if requested_accuracy is None:
			raise ValueError("Invalid value for `requested_accuracy`, must not be `None`")  # noqa: E501

		self._requested_accuracy = requested_accuracy

	@property
	def requester(self) -> str:
		"""Gets the requester of this PeriodicNotificationSubscription.

		Identifies the entity that is requesting the information (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)  # noqa: E501

		:return: The requester of this PeriodicNotificationSubscription.
		:rtype: str
		"""
		return self._requester

	@requester.setter
	def requester(self, requester: str):
		"""Sets the requester of this PeriodicNotificationSubscription.

		Identifies the entity that is requesting the information (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)  # noqa: E501

		:param requester: The requester of this PeriodicNotificationSubscription.
		:type requester: str
		"""

		self._requester = requester

	@property
	def resource_url(self) -> str:
		"""Gets the resource_url of this PeriodicNotificationSubscription.

		Self referring URL  # noqa: E501

		:return: The resource_url of this PeriodicNotificationSubscription.
		:rtype: str
		"""
		return self._resource_url

	@resource_url.setter
	def resource_url(self, resource_url: str):
		"""Sets the resource_url of this PeriodicNotificationSubscription.

		Self referring URL  # noqa: E501

		:param resource_url: The resource_url of this PeriodicNotificationSubscription.
		:type resource_url: str
		"""

		self._resource_url = resource_url
