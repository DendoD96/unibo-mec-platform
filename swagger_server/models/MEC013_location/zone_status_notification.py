# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC013_location.link import Link  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.operation_status import \
	OperationStatus  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.time_stamp import \
	TimeStamp  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class ZoneStatusNotification(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, access_point_id: str = None, callback_data: str = None, link: List[Link] = None,
	             number_of_users_in_ap: int = None, number_of_users_in_zone: int = None,
	             operation_status: OperationStatus = None, timestamp: TimeStamp = None,
	             zone_id: str = None):  # noqa: E501
		"""ZoneStatusNotification - a model defined in Swagger

		:param access_point_id: The access_point_id of this ZoneStatusNotification.  # noqa: E501
		:type access_point_id: str
		:param callback_data: The callback_data of this ZoneStatusNotification.  # noqa: E501
		:type callback_data: str
		:param link: The link of this ZoneStatusNotification.  # noqa: E501
		:type link: List[Link]
		:param number_of_users_in_ap: The number_of_users_in_ap of this ZoneStatusNotification.  # noqa: E501
		:type number_of_users_in_ap: int
		:param number_of_users_in_zone: The number_of_users_in_zone of this ZoneStatusNotification.  # noqa: E501
		:type number_of_users_in_zone: int
		:param operation_status: The operation_status of this ZoneStatusNotification.  # noqa: E501
		:type operation_status: OperationStatus
		:param timestamp: The timestamp of this ZoneStatusNotification.  # noqa: E501
		:type timestamp: TimeStamp
		:param zone_id: The zone_id of this ZoneStatusNotification.  # noqa: E501
		:type zone_id: str
		"""
		self.swagger_types = {
			'access_point_id': str,
			'callback_data': str,
			'link': List[Link],
			'number_of_users_in_ap': int,
			'number_of_users_in_zone': int,
			'operation_status': OperationStatus,
			'timestamp': TimeStamp,
			'zone_id': str
		}

		self.attribute_map = {
			'access_point_id': 'accessPointId',
			'callback_data': 'callbackData',
			'link': 'link',
			'number_of_users_in_ap': 'numberOfUsersInAP',
			'number_of_users_in_zone': 'numberOfUsersInZone',
			'operation_status': 'operationStatus',
			'timestamp': 'timestamp',
			'zone_id': 'zoneId'
		}
		self._access_point_id = access_point_id
		self._callback_data = callback_data
		self._link = link
		self._number_of_users_in_ap = number_of_users_in_ap
		self._number_of_users_in_zone = number_of_users_in_zone
		self._operation_status = operation_status
		self._timestamp = timestamp
		self._zone_id = zone_id

	@classmethod
	def from_dict(cls, dikt) -> 'ZoneStatusNotification':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The ZoneStatusNotification of this ZoneStatusNotification.  # noqa: E501
		:rtype: ZoneStatusNotification
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def access_point_id(self) -> str:
		"""Gets the access_point_id of this ZoneStatusNotification.

		Identifier of an access point.  # noqa: E501

		:return: The access_point_id of this ZoneStatusNotification.
		:rtype: str
		"""
		return self._access_point_id

	@access_point_id.setter
	def access_point_id(self, access_point_id: str):
		"""Sets the access_point_id of this ZoneStatusNotification.

		Identifier of an access point.  # noqa: E501

		:param access_point_id: The access_point_id of this ZoneStatusNotification.
		:type access_point_id: str
		"""

		self._access_point_id = access_point_id

	@property
	def callback_data(self) -> str:
		"""Gets the callback_data of this ZoneStatusNotification.

		CallBackData if passed by the application during the associated ZoneStatusSubscription operation. See [REST_NetAPI_Common].  # noqa: E501

		:return: The callback_data of this ZoneStatusNotification.
		:rtype: str
		"""
		return self._callback_data

	@callback_data.setter
	def callback_data(self, callback_data: str):
		"""Sets the callback_data of this ZoneStatusNotification.

		CallBackData if passed by the application during the associated ZoneStatusSubscription operation. See [REST_NetAPI_Common].  # noqa: E501

		:param callback_data: The callback_data of this ZoneStatusNotification.
		:type callback_data: str
		"""

		self._callback_data = callback_data

	@property
	def link(self) -> List[Link]:
		"""Gets the link of this ZoneStatusNotification.

		Link to other resources that are in relationship with this notification. The server SHOULD include a link to the related subscription. No other links are required or suggested by this specification  # noqa: E501

		:return: The link of this ZoneStatusNotification.
		:rtype: List[Link]
		"""
		return self._link

	@link.setter
	def link(self, link: List[Link]):
		"""Sets the link of this ZoneStatusNotification.

		Link to other resources that are in relationship with this notification. The server SHOULD include a link to the related subscription. No other links are required or suggested by this specification  # noqa: E501

		:param link: The link of this ZoneStatusNotification.
		:type link: List[Link]
		"""

		self._link = link

	@property
	def number_of_users_in_ap(self) -> int:
		"""Gets the number_of_users_in_ap of this ZoneStatusNotification.

		This element shall be present when ZoneStatusSubscription includes numberOfUsersAPThreshold element and the number of users in an access point exceeds the threshold defined in the subscription.  # noqa: E501

		:return: The number_of_users_in_ap of this ZoneStatusNotification.
		:rtype: int
		"""
		return self._number_of_users_in_ap

	@number_of_users_in_ap.setter
	def number_of_users_in_ap(self, number_of_users_in_ap: int):
		"""Sets the number_of_users_in_ap of this ZoneStatusNotification.

		This element shall be present when ZoneStatusSubscription includes numberOfUsersAPThreshold element and the number of users in an access point exceeds the threshold defined in the subscription.  # noqa: E501

		:param number_of_users_in_ap: The number_of_users_in_ap of this ZoneStatusNotification.
		:type number_of_users_in_ap: int
		"""

		self._number_of_users_in_ap = number_of_users_in_ap

	@property
	def number_of_users_in_zone(self) -> int:
		"""Gets the number_of_users_in_zone of this ZoneStatusNotification.

		This element shall be present when ZoneStatusSubscription includes numberOfUsersZoneThreshold element and the number of users in a zone exceeds the threshold defined in this subscription.  # noqa: E501

		:return: The number_of_users_in_zone of this ZoneStatusNotification.
		:rtype: int
		"""
		return self._number_of_users_in_zone

	@number_of_users_in_zone.setter
	def number_of_users_in_zone(self, number_of_users_in_zone: int):
		"""Sets the number_of_users_in_zone of this ZoneStatusNotification.

		This element shall be present when ZoneStatusSubscription includes numberOfUsersZoneThreshold element and the number of users in a zone exceeds the threshold defined in this subscription.  # noqa: E501

		:param number_of_users_in_zone: The number_of_users_in_zone of this ZoneStatusNotification.
		:type number_of_users_in_zone: int
		"""

		self._number_of_users_in_zone = number_of_users_in_zone

	@property
	def operation_status(self) -> OperationStatus:
		"""Gets the operation_status of this ZoneStatusNotification.


		:return: The operation_status of this ZoneStatusNotification.
		:rtype: OperationStatus
		"""
		return self._operation_status

	@operation_status.setter
	def operation_status(self, operation_status: OperationStatus):
		"""Sets the operation_status of this ZoneStatusNotification.


		:param operation_status: The operation_status of this ZoneStatusNotification.
		:type operation_status: OperationStatus
		"""

		self._operation_status = operation_status

	@property
	def timestamp(self) -> TimeStamp:
		"""Gets the timestamp of this ZoneStatusNotification.


		:return: The timestamp of this ZoneStatusNotification.
		:rtype: TimeStamp
		"""
		return self._timestamp

	@timestamp.setter
	def timestamp(self, timestamp: TimeStamp):
		"""Sets the timestamp of this ZoneStatusNotification.


		:param timestamp: The timestamp of this ZoneStatusNotification.
		:type timestamp: TimeStamp
		"""
		if timestamp is None:
			raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

		self._timestamp = timestamp

	@property
	def zone_id(self) -> str:
		"""Gets the zone_id of this ZoneStatusNotification.

		Identifier of zone  # noqa: E501

		:return: The zone_id of this ZoneStatusNotification.
		:rtype: str
		"""
		return self._zone_id

	@zone_id.setter
	def zone_id(self, zone_id: str):
		"""Sets the zone_id of this ZoneStatusNotification.

		Identifier of zone  # noqa: E501

		:param zone_id: The zone_id of this ZoneStatusNotification.
		:type zone_id: str
		"""
		if zone_id is None:
			raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

		self._zone_id = zone_id
