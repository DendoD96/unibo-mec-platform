# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ZoneInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, number_of_access_points: int=None, number_of_unserviceable_access_points: int=None, number_of_users: int=None, resource_url: str=None, zone_id: str=None):  # noqa: E501
        """ZoneInfo - a model defined in Swagger

        :param number_of_access_points: The number_of_access_points of this ZoneInfo.  # noqa: E501
        :type number_of_access_points: int
        :param number_of_unserviceable_access_points: The number_of_unserviceable_access_points of this ZoneInfo.  # noqa: E501
        :type number_of_unserviceable_access_points: int
        :param number_of_users: The number_of_users of this ZoneInfo.  # noqa: E501
        :type number_of_users: int
        :param resource_url: The resource_url of this ZoneInfo.  # noqa: E501
        :type resource_url: str
        :param zone_id: The zone_id of this ZoneInfo.  # noqa: E501
        :type zone_id: str
        """
        self.swagger_types = {
            'number_of_access_points': int,
            'number_of_unserviceable_access_points': int,
            'number_of_users': int,
            'resource_url': str,
            'zone_id': str
        }

        self.attribute_map = {
            'number_of_access_points': 'numberOfAccessPoints',
            'number_of_unserviceable_access_points': 'numberOfUnserviceableAccessPoints',
            'number_of_users': 'numberOfUsers',
            'resource_url': 'resourceURL',
            'zone_id': 'zoneId'
        }
        self._number_of_access_points = number_of_access_points
        self._number_of_unserviceable_access_points = number_of_unserviceable_access_points
        self._number_of_users = number_of_users
        self._resource_url = resource_url
        self._zone_id = zone_id

    @classmethod
    def from_dict(cls, dikt) -> 'ZoneInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ZoneInfo of this ZoneInfo.  # noqa: E501
        :rtype: ZoneInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_access_points(self) -> int:
        """Gets the number_of_access_points of this ZoneInfo.

        The number of access points within the zone  # noqa: E501

        :return: The number_of_access_points of this ZoneInfo.
        :rtype: int
        """
        return self._number_of_access_points

    @number_of_access_points.setter
    def number_of_access_points(self, number_of_access_points: int):
        """Sets the number_of_access_points of this ZoneInfo.

        The number of access points within the zone  # noqa: E501

        :param number_of_access_points: The number_of_access_points of this ZoneInfo.
        :type number_of_access_points: int
        """
        if number_of_access_points is None:
            raise ValueError("Invalid value for `number_of_access_points`, must not be `None`")  # noqa: E501

        self._number_of_access_points = number_of_access_points

    @property
    def number_of_unserviceable_access_points(self) -> int:
        """Gets the number_of_unserviceable_access_points of this ZoneInfo.

        Number of inoperable access points within the zone.  # noqa: E501

        :return: The number_of_unserviceable_access_points of this ZoneInfo.
        :rtype: int
        """
        return self._number_of_unserviceable_access_points

    @number_of_unserviceable_access_points.setter
    def number_of_unserviceable_access_points(self, number_of_unserviceable_access_points: int):
        """Sets the number_of_unserviceable_access_points of this ZoneInfo.

        Number of inoperable access points within the zone.  # noqa: E501

        :param number_of_unserviceable_access_points: The number_of_unserviceable_access_points of this ZoneInfo.
        :type number_of_unserviceable_access_points: int
        """
        if number_of_unserviceable_access_points is None:
            raise ValueError("Invalid value for `number_of_unserviceable_access_points`, must not be `None`")  # noqa: E501

        self._number_of_unserviceable_access_points = number_of_unserviceable_access_points

    @property
    def number_of_users(self) -> int:
        """Gets the number_of_users of this ZoneInfo.

        The number of users currently on the access point.  # noqa: E501

        :return: The number_of_users of this ZoneInfo.
        :rtype: int
        """
        return self._number_of_users

    @number_of_users.setter
    def number_of_users(self, number_of_users: int):
        """Sets the number_of_users of this ZoneInfo.

        The number of users currently on the access point.  # noqa: E501

        :param number_of_users: The number_of_users of this ZoneInfo.
        :type number_of_users: int
        """
        if number_of_users is None:
            raise ValueError("Invalid value for `number_of_users`, must not be `None`")  # noqa: E501

        self._number_of_users = number_of_users

    @property
    def resource_url(self) -> str:
        """Gets the resource_url of this ZoneInfo.

        Self referring URL  # noqa: E501

        :return: The resource_url of this ZoneInfo.
        :rtype: str
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: str):
        """Sets the resource_url of this ZoneInfo.

        Self referring URL  # noqa: E501

        :param resource_url: The resource_url of this ZoneInfo.
        :type resource_url: str
        """
        if resource_url is None:
            raise ValueError("Invalid value for `resource_url`, must not be `None`")  # noqa: E501

        self._resource_url = resource_url

    @property
    def zone_id(self) -> str:
        """Gets the zone_id of this ZoneInfo.

        Identifier of zone  # noqa: E501

        :return: The zone_id of this ZoneInfo.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: str):
        """Sets the zone_id of this ZoneInfo.

        Identifier of zone  # noqa: E501

        :param zone_id: The zone_id of this ZoneInfo.
        :type zone_id: str
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id
