# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC013_location.callback_reference import \
	CallbackReference  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC013_location.operation_status import \
	OperationStatus  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class ZoneStatusSubscription(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, callback_reference: CallbackReference = None, client_correlator: str = None,
	             number_of_users_ap_threshold: int = None, number_of_users_zone_threshold: int = None,
	             operation_status: List[OperationStatus] = None, resource_url: str = None,
	             zone_id: str = None):  # noqa: E501
		"""ZoneStatusSubscription - a model defined in Swagger

		:param callback_reference: The callback_reference of this ZoneStatusSubscription.  # noqa: E501
		:type callback_reference: CallbackReference
		:param client_correlator: The client_correlator of this ZoneStatusSubscription.  # noqa: E501
		:type client_correlator: str
		:param number_of_users_ap_threshold: The number_of_users_ap_threshold of this ZoneStatusSubscription.  # noqa: E501
		:type number_of_users_ap_threshold: int
		:param number_of_users_zone_threshold: The number_of_users_zone_threshold of this ZoneStatusSubscription.  # noqa: E501
		:type number_of_users_zone_threshold: int
		:param operation_status: The operation_status of this ZoneStatusSubscription.  # noqa: E501
		:type operation_status: List[OperationStatus]
		:param resource_url: The resource_url of this ZoneStatusSubscription.  # noqa: E501
		:type resource_url: str
		:param zone_id: The zone_id of this ZoneStatusSubscription.  # noqa: E501
		:type zone_id: str
		"""
		self.swagger_types = {
			'callback_reference': CallbackReference,
			'client_correlator': str,
			'number_of_users_ap_threshold': int,
			'number_of_users_zone_threshold': int,
			'operation_status': List[OperationStatus],
			'resource_url': str,
			'zone_id': str
		}

		self.attribute_map = {
			'callback_reference': 'callbackReference',
			'client_correlator': 'clientCorrelator',
			'number_of_users_ap_threshold': 'numberOfUsersAPThreshold',
			'number_of_users_zone_threshold': 'numberOfUsersZoneThreshold',
			'operation_status': 'operationStatus',
			'resource_url': 'resourceURL',
			'zone_id': 'zoneId'
		}
		self._callback_reference = callback_reference
		self._client_correlator = client_correlator
		self._number_of_users_ap_threshold = number_of_users_ap_threshold
		self._number_of_users_zone_threshold = number_of_users_zone_threshold
		self._operation_status = operation_status
		self._resource_url = resource_url
		self._zone_id = zone_id

	@classmethod
	def from_dict(cls, dikt) -> 'ZoneStatusSubscription':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The ZoneStatusSubscription of this ZoneStatusSubscription.  # noqa: E501
		:rtype: ZoneStatusSubscription
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def callback_reference(self) -> CallbackReference:
		"""Gets the callback_reference of this ZoneStatusSubscription.


		:return: The callback_reference of this ZoneStatusSubscription.
		:rtype: CallbackReference
		"""
		return self._callback_reference

	@callback_reference.setter
	def callback_reference(self, callback_reference: CallbackReference):
		"""Sets the callback_reference of this ZoneStatusSubscription.


		:param callback_reference: The callback_reference of this ZoneStatusSubscription.
		:type callback_reference: CallbackReference
		"""
		if callback_reference is None:
			raise ValueError("Invalid value for `callback_reference`, must not be `None`")  # noqa: E501

		self._callback_reference = callback_reference

	@property
	def client_correlator(self) -> str:
		"""Gets the client_correlator of this ZoneStatusSubscription.

		A correlator that the client can use to tag this particular resource representation during a request to create a resource on the server.  # noqa: E501

		:return: The client_correlator of this ZoneStatusSubscription.
		:rtype: str
		"""
		return self._client_correlator

	@client_correlator.setter
	def client_correlator(self, client_correlator: str):
		"""Sets the client_correlator of this ZoneStatusSubscription.

		A correlator that the client can use to tag this particular resource representation during a request to create a resource on the server.  # noqa: E501

		:param client_correlator: The client_correlator of this ZoneStatusSubscription.
		:type client_correlator: str
		"""

		self._client_correlator = client_correlator

	@property
	def number_of_users_ap_threshold(self) -> int:
		"""Gets the number_of_users_ap_threshold of this ZoneStatusSubscription.

		Threshold number of users in an access point which if crossed shall cause a notification  # noqa: E501

		:return: The number_of_users_ap_threshold of this ZoneStatusSubscription.
		:rtype: int
		"""
		return self._number_of_users_ap_threshold

	@number_of_users_ap_threshold.setter
	def number_of_users_ap_threshold(self, number_of_users_ap_threshold: int):
		"""Sets the number_of_users_ap_threshold of this ZoneStatusSubscription.

		Threshold number of users in an access point which if crossed shall cause a notification  # noqa: E501

		:param number_of_users_ap_threshold: The number_of_users_ap_threshold of this ZoneStatusSubscription.
		:type number_of_users_ap_threshold: int
		"""

		self._number_of_users_ap_threshold = number_of_users_ap_threshold

	@property
	def number_of_users_zone_threshold(self) -> int:
		"""Gets the number_of_users_zone_threshold of this ZoneStatusSubscription.

		Threshold number of users in a zone which if crossed shall cause a notification  # noqa: E501

		:return: The number_of_users_zone_threshold of this ZoneStatusSubscription.
		:rtype: int
		"""
		return self._number_of_users_zone_threshold

	@number_of_users_zone_threshold.setter
	def number_of_users_zone_threshold(self, number_of_users_zone_threshold: int):
		"""Sets the number_of_users_zone_threshold of this ZoneStatusSubscription.

		Threshold number of users in a zone which if crossed shall cause a notification  # noqa: E501

		:param number_of_users_zone_threshold: The number_of_users_zone_threshold of this ZoneStatusSubscription.
		:type number_of_users_zone_threshold: int
		"""

		self._number_of_users_zone_threshold = number_of_users_zone_threshold

	@property
	def operation_status(self) -> List[OperationStatus]:
		"""Gets the operation_status of this ZoneStatusSubscription.

		List of operation status values to generate notifications for (these apply to all access points within a zone).  # noqa: E501

		:return: The operation_status of this ZoneStatusSubscription.
		:rtype: List[OperationStatus]
		"""
		return self._operation_status

	@operation_status.setter
	def operation_status(self, operation_status: List[OperationStatus]):
		"""Sets the operation_status of this ZoneStatusSubscription.

		List of operation status values to generate notifications for (these apply to all access points within a zone).  # noqa: E501

		:param operation_status: The operation_status of this ZoneStatusSubscription.
		:type operation_status: List[OperationStatus]
		"""

		self._operation_status = operation_status

	@property
	def resource_url(self) -> str:
		"""Gets the resource_url of this ZoneStatusSubscription.

		Self referring URL  # noqa: E501

		:return: The resource_url of this ZoneStatusSubscription.
		:rtype: str
		"""
		return self._resource_url

	@resource_url.setter
	def resource_url(self, resource_url: str):
		"""Sets the resource_url of this ZoneStatusSubscription.

		Self referring URL  # noqa: E501

		:param resource_url: The resource_url of this ZoneStatusSubscription.
		:type resource_url: str
		"""

		self._resource_url = resource_url

	@property
	def zone_id(self) -> str:
		"""Gets the zone_id of this ZoneStatusSubscription.

		Identifier of zone  # noqa: E501

		:return: The zone_id of this ZoneStatusSubscription.
		:rtype: str
		"""
		return self._zone_id

	@zone_id.setter
	def zone_id(self, zone_id: str):
		"""Sets the zone_id of this ZoneStatusSubscription.

		Identifier of zone  # noqa: E501

		:param zone_id: The zone_id of this ZoneStatusSubscription.
		:type zone_id: str
		"""
		if zone_id is None:
			raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

		self._zone_id = zone_id
