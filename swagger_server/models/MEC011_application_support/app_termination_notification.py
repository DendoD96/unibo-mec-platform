# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC011_application_support.app_termination_notification_links import \
	AppTerminationNotificationLinks  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.app_termination_notification_max_graceful_timeout import \
	AppTerminationNotificationMaxGracefulTimeout  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.app_termination_notification_notification_type import \
	AppTerminationNotificationNotificationType  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.operation_action_type import \
	OperationActionType  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class AppTerminationNotification(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, notification_type: AppTerminationNotificationNotificationType = None,
	             operation_action: OperationActionType = None,
	             max_graceful_timeout: AppTerminationNotificationMaxGracefulTimeout = None,
	             links: AppTerminationNotificationLinks = None):  # noqa: E501
		"""AppTerminationNotification - a model defined in Swagger

		:param notification_type: The notification_type of this AppTerminationNotification.  # noqa: E501
		:type notification_type: AppTerminationNotificationNotificationType
		:param operation_action: The operation_action of this AppTerminationNotification.  # noqa: E501
		:type operation_action: OperationActionType
		:param max_graceful_timeout: The max_graceful_timeout of this AppTerminationNotification.  # noqa: E501
		:type max_graceful_timeout: AppTerminationNotificationMaxGracefulTimeout
		:param links: The links of this AppTerminationNotification.  # noqa: E501
		:type links: AppTerminationNotificationLinks
		"""
		self.swagger_types = {
			'notification_type': AppTerminationNotificationNotificationType,
			'operation_action': OperationActionType,
			'max_graceful_timeout': AppTerminationNotificationMaxGracefulTimeout,
			'links': AppTerminationNotificationLinks
		}

		self.attribute_map = {
			'notification_type': 'notificationType',
			'operation_action': 'operationAction',
			'max_graceful_timeout': 'maxGracefulTimeout',
			'links': '_links'
		}
		self._notification_type = notification_type
		self._operation_action = operation_action
		self._max_graceful_timeout = max_graceful_timeout
		self._links = links

	@classmethod
	def from_dict(cls, dikt) -> 'AppTerminationNotification':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The AppTerminationNotification of this AppTerminationNotification.  # noqa: E501
		:rtype: AppTerminationNotification
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def notification_type(self) -> AppTerminationNotificationNotificationType:
		"""Gets the notification_type of this AppTerminationNotification.


		:return: The notification_type of this AppTerminationNotification.
		:rtype: AppTerminationNotificationNotificationType
		"""
		return self._notification_type

	@notification_type.setter
	def notification_type(self, notification_type: AppTerminationNotificationNotificationType):
		"""Sets the notification_type of this AppTerminationNotification.


		:param notification_type: The notification_type of this AppTerminationNotification.
		:type notification_type: AppTerminationNotificationNotificationType
		"""
		if notification_type is None:
			raise ValueError("Invalid value for `notification_type`, must not be `None`")  # noqa: E501

		self._notification_type = notification_type

	@property
	def operation_action(self) -> OperationActionType:
		"""Gets the operation_action of this AppTerminationNotification.


		:return: The operation_action of this AppTerminationNotification.
		:rtype: OperationActionType
		"""
		return self._operation_action

	@operation_action.setter
	def operation_action(self, operation_action: OperationActionType):
		"""Sets the operation_action of this AppTerminationNotification.


		:param operation_action: The operation_action of this AppTerminationNotification.
		:type operation_action: OperationActionType
		"""
		if operation_action is None:
			raise ValueError("Invalid value for `operation_action`, must not be `None`")  # noqa: E501

		self._operation_action = operation_action

	@property
	def max_graceful_timeout(self) -> AppTerminationNotificationMaxGracefulTimeout:
		"""Gets the max_graceful_timeout of this AppTerminationNotification.


		:return: The max_graceful_timeout of this AppTerminationNotification.
		:rtype: AppTerminationNotificationMaxGracefulTimeout
		"""
		return self._max_graceful_timeout

	@max_graceful_timeout.setter
	def max_graceful_timeout(self, max_graceful_timeout: AppTerminationNotificationMaxGracefulTimeout):
		"""Sets the max_graceful_timeout of this AppTerminationNotification.


		:param max_graceful_timeout: The max_graceful_timeout of this AppTerminationNotification.
		:type max_graceful_timeout: AppTerminationNotificationMaxGracefulTimeout
		"""
		if max_graceful_timeout is None:
			raise ValueError("Invalid value for `max_graceful_timeout`, must not be `None`")  # noqa: E501

		self._max_graceful_timeout = max_graceful_timeout

	@property
	def links(self) -> AppTerminationNotificationLinks:
		"""Gets the links of this AppTerminationNotification.


		:return: The links of this AppTerminationNotification.
		:rtype: AppTerminationNotificationLinks
		"""
		return self._links

	@links.setter
	def links(self, links: AppTerminationNotificationLinks):
		"""Sets the links of this AppTerminationNotification.


		:param links: The links of this AppTerminationNotification.
		:type links: AppTerminationNotificationLinks
		"""
		if links is None:
			raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

		self._links = links
