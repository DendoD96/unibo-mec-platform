# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC011_application_support.app_termination_notification_subscription_app_instance_id import \
	AppTerminationNotificationSubscriptionAppInstanceId  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.app_termination_notification_subscription_callback_reference import \
	AppTerminationNotificationSubscriptionCallbackReference  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.app_termination_notification_subscription_subscription_type import \
	AppTerminationNotificationSubscriptionSubscriptionType  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.model_self import \
	ModelSelf  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class AppTerminationNotificationSubscription(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, subscription_type: AppTerminationNotificationSubscriptionSubscriptionType = None,
	             callback_reference: AppTerminationNotificationSubscriptionCallbackReference = None,
	             links: ModelSelf = None,
	             app_instance_id: AppTerminationNotificationSubscriptionAppInstanceId = None):  # noqa: E501
		"""AppTerminationNotificationSubscription - a model defined in Swagger

		:param subscription_type: The subscription_type of this AppTerminationNotificationSubscription.  # noqa: E501
		:type subscription_type: AppTerminationNotificationSubscriptionSubscriptionType
		:param callback_reference: The callback_reference of this AppTerminationNotificationSubscription.  # noqa: E501
		:type callback_reference: AppTerminationNotificationSubscriptionCallbackReference
		:param links: The links of this AppTerminationNotificationSubscription.  # noqa: E501
		:type links: ModelSelf
		:param app_instance_id: The app_instance_id of this AppTerminationNotificationSubscription.  # noqa: E501
		:type app_instance_id: AppTerminationNotificationSubscriptionAppInstanceId
		"""
		self.swagger_types = {
			'subscription_type': AppTerminationNotificationSubscriptionSubscriptionType,
			'callback_reference': AppTerminationNotificationSubscriptionCallbackReference,
			'links': ModelSelf,
			'app_instance_id': AppTerminationNotificationSubscriptionAppInstanceId
		}

		self.attribute_map = {
			'subscription_type': 'subscriptionType',
			'callback_reference': 'callbackReference',
			'links': '_links',
			'app_instance_id': 'appInstanceId'
		}
		self._subscription_type = subscription_type
		self._callback_reference = callback_reference
		self._links = links
		self._app_instance_id = app_instance_id

	@classmethod
	def from_dict(cls, dikt) -> 'AppTerminationNotificationSubscription':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The AppTerminationNotificationSubscription of this AppTerminationNotificationSubscription.  # noqa: E501
		:rtype: AppTerminationNotificationSubscription
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def subscription_type(self) -> AppTerminationNotificationSubscriptionSubscriptionType:
		"""Gets the subscription_type of this AppTerminationNotificationSubscription.


		:return: The subscription_type of this AppTerminationNotificationSubscription.
		:rtype: AppTerminationNotificationSubscriptionSubscriptionType
		"""
		return self._subscription_type

	@subscription_type.setter
	def subscription_type(self, subscription_type: AppTerminationNotificationSubscriptionSubscriptionType):
		"""Sets the subscription_type of this AppTerminationNotificationSubscription.


		:param subscription_type: The subscription_type of this AppTerminationNotificationSubscription.
		:type subscription_type: AppTerminationNotificationSubscriptionSubscriptionType
		"""
		if subscription_type is None:
			raise ValueError("Invalid value for `subscription_type`, must not be `None`")  # noqa: E501

		self._subscription_type = subscription_type

	@property
	def callback_reference(self) -> AppTerminationNotificationSubscriptionCallbackReference:
		"""Gets the callback_reference of this AppTerminationNotificationSubscription.


		:return: The callback_reference of this AppTerminationNotificationSubscription.
		:rtype: AppTerminationNotificationSubscriptionCallbackReference
		"""
		return self._callback_reference

	@callback_reference.setter
	def callback_reference(self, callback_reference: AppTerminationNotificationSubscriptionCallbackReference):
		"""Sets the callback_reference of this AppTerminationNotificationSubscription.


		:param callback_reference: The callback_reference of this AppTerminationNotificationSubscription.
		:type callback_reference: AppTerminationNotificationSubscriptionCallbackReference
		"""
		if callback_reference is None:
			raise ValueError("Invalid value for `callback_reference`, must not be `None`")  # noqa: E501

		self._callback_reference = callback_reference

	@property
	def links(self) -> ModelSelf:
		"""Gets the links of this AppTerminationNotificationSubscription.


		:return: The links of this AppTerminationNotificationSubscription.
		:rtype: ModelSelf
		"""
		return self._links

	@links.setter
	def links(self, links: ModelSelf):
		"""Sets the links of this AppTerminationNotificationSubscription.


		:param links: The links of this AppTerminationNotificationSubscription.
		:type links: ModelSelf
		"""
		if links is None:
			raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

		self._links = links

	@property
	def app_instance_id(self) -> AppTerminationNotificationSubscriptionAppInstanceId:
		"""Gets the app_instance_id of this AppTerminationNotificationSubscription.


		:return: The app_instance_id of this AppTerminationNotificationSubscription.
		:rtype: AppTerminationNotificationSubscriptionAppInstanceId
		"""
		return self._app_instance_id

	@app_instance_id.setter
	def app_instance_id(self, app_instance_id: AppTerminationNotificationSubscriptionAppInstanceId):
		"""Sets the app_instance_id of this AppTerminationNotificationSubscription.


		:param app_instance_id: The app_instance_id of this AppTerminationNotificationSubscription.
		:type app_instance_id: AppTerminationNotificationSubscriptionAppInstanceId
		"""
		if app_instance_id is None:
			raise ValueError("Invalid value for `app_instance_id`, must not be `None`")  # noqa: E501

		self._app_instance_id = app_instance_id
