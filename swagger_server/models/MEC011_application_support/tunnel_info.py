# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401 # pylint: disable=unused-import

from typing import List, Dict  # noqa: F401 # pylint: disable=unused-import

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC011_application_support.tunnel_info_tunnel_dst_address import \
	TunnelInfoTunnelDstAddress  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.tunnel_info_tunnel_src_address import \
	TunnelInfoTunnelSrcAddress  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server.models.MEC011_application_support.tunnel_info_tunnel_type import \
	TunnelInfoTunnelType  # noqa: F401 # pylint: disable=unused-import,E501
from swagger_server import util


class TunnelInfo(Model):
	"""NOTE: This class is auto generated by the swagger code generator program.

	Do not edit the class manually.
	"""

	def __init__(self, tunnel_type: TunnelInfoTunnelType = None, tunnel_dst_address: TunnelInfoTunnelDstAddress = None,
	             tunnel_src_address: TunnelInfoTunnelSrcAddress = None):  # noqa: E501
		"""TunnelInfo - a model defined in Swagger

		:param tunnel_type: The tunnel_type of this TunnelInfo.  # noqa: E501
		:type tunnel_type: TunnelInfoTunnelType
		:param tunnel_dst_address: The tunnel_dst_address of this TunnelInfo.  # noqa: E501
		:type tunnel_dst_address: TunnelInfoTunnelDstAddress
		:param tunnel_src_address: The tunnel_src_address of this TunnelInfo.  # noqa: E501
		:type tunnel_src_address: TunnelInfoTunnelSrcAddress
		"""
		self.swagger_types = {
			'tunnel_type': TunnelInfoTunnelType,
			'tunnel_dst_address': TunnelInfoTunnelDstAddress,
			'tunnel_src_address': TunnelInfoTunnelSrcAddress
		}

		self.attribute_map = {
			'tunnel_type': 'tunnelType',
			'tunnel_dst_address': 'tunnelDstAddress',
			'tunnel_src_address': 'tunnelSrcAddress'
		}
		self._tunnel_type = tunnel_type
		self._tunnel_dst_address = tunnel_dst_address
		self._tunnel_src_address = tunnel_src_address

	@classmethod
	def from_dict(cls, dikt) -> 'TunnelInfo':
		"""Returns the dict as a model

		:param dikt: A dict.
		:type: dict
		:return: The TunnelInfo of this TunnelInfo.  # noqa: E501
		:rtype: TunnelInfo
		"""
		return util.deserialize_model(dikt, cls)

	@property
	def tunnel_type(self) -> TunnelInfoTunnelType:
		"""Gets the tunnel_type of this TunnelInfo.


		:return: The tunnel_type of this TunnelInfo.
		:rtype: TunnelInfoTunnelType
		"""
		return self._tunnel_type

	@tunnel_type.setter
	def tunnel_type(self, tunnel_type: TunnelInfoTunnelType):
		"""Sets the tunnel_type of this TunnelInfo.


		:param tunnel_type: The tunnel_type of this TunnelInfo.
		:type tunnel_type: TunnelInfoTunnelType
		"""
		if tunnel_type is None:
			raise ValueError("Invalid value for `tunnel_type`, must not be `None`")  # noqa: E501

		self._tunnel_type = tunnel_type

	@property
	def tunnel_dst_address(self) -> TunnelInfoTunnelDstAddress:
		"""Gets the tunnel_dst_address of this TunnelInfo.


		:return: The tunnel_dst_address of this TunnelInfo.
		:rtype: TunnelInfoTunnelDstAddress
		"""
		return self._tunnel_dst_address

	@tunnel_dst_address.setter
	def tunnel_dst_address(self, tunnel_dst_address: TunnelInfoTunnelDstAddress):
		"""Sets the tunnel_dst_address of this TunnelInfo.


		:param tunnel_dst_address: The tunnel_dst_address of this TunnelInfo.
		:type tunnel_dst_address: TunnelInfoTunnelDstAddress
		"""

		self._tunnel_dst_address = tunnel_dst_address

	@property
	def tunnel_src_address(self) -> TunnelInfoTunnelSrcAddress:
		"""Gets the tunnel_src_address of this TunnelInfo.


		:return: The tunnel_src_address of this TunnelInfo.
		:rtype: TunnelInfoTunnelSrcAddress
		"""
		return self._tunnel_src_address

	@tunnel_src_address.setter
	def tunnel_src_address(self, tunnel_src_address: TunnelInfoTunnelSrcAddress):
		"""Sets the tunnel_src_address of this TunnelInfo.


		:param tunnel_src_address: The tunnel_src_address of this TunnelInfo.
		:type tunnel_src_address: TunnelInfoTunnelSrcAddress
		"""

		self._tunnel_src_address = tunnel_src_address
