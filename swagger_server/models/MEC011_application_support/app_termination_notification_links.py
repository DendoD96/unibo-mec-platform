# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC011_application_support.link_type import LinkType  # noqa: F401,E501
from swagger_server.models.MEC011_application_support.link_type_confirm_termination import LinkTypeConfirmTermination  # noqa: F401,E501
from swagger_server import util


class AppTerminationNotificationLinks(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, subscription: LinkType=None, confirm_termination: LinkTypeConfirmTermination=None):  # noqa: E501
        """AppTerminationNotificationLinks - a model defined in Swagger

        :param subscription: The subscription of this AppTerminationNotificationLinks.  # noqa: E501
        :type subscription: LinkType
        :param confirm_termination: The confirm_termination of this AppTerminationNotificationLinks.  # noqa: E501
        :type confirm_termination: LinkTypeConfirmTermination
        """
        self.swagger_types = {
            'subscription': LinkType,
            'confirm_termination': LinkTypeConfirmTermination
        }

        self.attribute_map = {
            'subscription': 'subscription',
            'confirm_termination': 'confirmTermination'
        }
        self._subscription = subscription
        self._confirm_termination = confirm_termination

    @classmethod
    def from_dict(cls, dikt) -> 'AppTerminationNotificationLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppTerminationNotification.Links of this AppTerminationNotificationLinks.  # noqa: E501
        :rtype: AppTerminationNotificationLinks
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscription(self) -> LinkType:
        """Gets the subscription of this AppTerminationNotificationLinks.


        :return: The subscription of this AppTerminationNotificationLinks.
        :rtype: LinkType
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription: LinkType):
        """Sets the subscription of this AppTerminationNotificationLinks.


        :param subscription: The subscription of this AppTerminationNotificationLinks.
        :type subscription: LinkType
        """
        if subscription is None:
            raise ValueError("Invalid value for `subscription`, must not be `None`")  # noqa: E501

        self._subscription = subscription

    @property
    def confirm_termination(self) -> LinkTypeConfirmTermination:
        """Gets the confirm_termination of this AppTerminationNotificationLinks.


        :return: The confirm_termination of this AppTerminationNotificationLinks.
        :rtype: LinkTypeConfirmTermination
        """
        return self._confirm_termination

    @confirm_termination.setter
    def confirm_termination(self, confirm_termination: LinkTypeConfirmTermination):
        """Sets the confirm_termination of this AppTerminationNotificationLinks.


        :param confirm_termination: The confirm_termination of this AppTerminationNotificationLinks.
        :type confirm_termination: LinkTypeConfirmTermination
        """

        self._confirm_termination = confirm_termination
