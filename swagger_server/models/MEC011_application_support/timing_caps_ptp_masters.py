# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.MEC011_application_support.timing_caps_ntp_servers_delay_req_max_rate import TimingCapsNtpServersDelayReqMaxRate  # noqa: F401,E501
from swagger_server.models.MEC011_application_support.timing_caps_ntp_servers_ptp_master_ip_address import TimingCapsNtpServersPtpMasterIpAddress  # noqa: F401,E501
from swagger_server.models.MEC011_application_support.timing_caps_ntp_servers_ptp_master_local_priority import TimingCapsNtpServersPtpMasterLocalPriority  # noqa: F401,E501
from swagger_server import util


class TimingCapsPtpMasters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ptp_master_ip_address: TimingCapsNtpServersPtpMasterIpAddress=None, ptp_master_local_priority: TimingCapsNtpServersPtpMasterLocalPriority=None, delay_req_max_rate: TimingCapsNtpServersDelayReqMaxRate=None):  # noqa: E501
        """TimingCapsPtpMasters - a model defined in Swagger

        :param ptp_master_ip_address: The ptp_master_ip_address of this TimingCapsPtpMasters.  # noqa: E501
        :type ptp_master_ip_address: TimingCapsNtpServersPtpMasterIpAddress
        :param ptp_master_local_priority: The ptp_master_local_priority of this TimingCapsPtpMasters.  # noqa: E501
        :type ptp_master_local_priority: TimingCapsNtpServersPtpMasterLocalPriority
        :param delay_req_max_rate: The delay_req_max_rate of this TimingCapsPtpMasters.  # noqa: E501
        :type delay_req_max_rate: TimingCapsNtpServersDelayReqMaxRate
        """
        self.swagger_types = {
            'ptp_master_ip_address': TimingCapsNtpServersPtpMasterIpAddress,
            'ptp_master_local_priority': TimingCapsNtpServersPtpMasterLocalPriority,
            'delay_req_max_rate': TimingCapsNtpServersDelayReqMaxRate
        }

        self.attribute_map = {
            'ptp_master_ip_address': 'ptpMasterIpAddress',
            'ptp_master_local_priority': 'ptpMasterLocalPriority',
            'delay_req_max_rate': 'delayReqMaxRate'
        }
        self._ptp_master_ip_address = ptp_master_ip_address
        self._ptp_master_local_priority = ptp_master_local_priority
        self._delay_req_max_rate = delay_req_max_rate

    @classmethod
    def from_dict(cls, dikt) -> 'TimingCapsPtpMasters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimingCaps_PtpMasters of this TimingCapsPtpMasters.  # noqa: E501
        :rtype: TimingCapsPtpMasters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ptp_master_ip_address(self) -> TimingCapsNtpServersPtpMasterIpAddress:
        """Gets the ptp_master_ip_address of this TimingCapsPtpMasters.


        :return: The ptp_master_ip_address of this TimingCapsPtpMasters.
        :rtype: TimingCapsNtpServersPtpMasterIpAddress
        """
        return self._ptp_master_ip_address

    @ptp_master_ip_address.setter
    def ptp_master_ip_address(self, ptp_master_ip_address: TimingCapsNtpServersPtpMasterIpAddress):
        """Sets the ptp_master_ip_address of this TimingCapsPtpMasters.


        :param ptp_master_ip_address: The ptp_master_ip_address of this TimingCapsPtpMasters.
        :type ptp_master_ip_address: TimingCapsNtpServersPtpMasterIpAddress
        """
        if ptp_master_ip_address is None:
            raise ValueError("Invalid value for `ptp_master_ip_address`, must not be `None`")  # noqa: E501

        self._ptp_master_ip_address = ptp_master_ip_address

    @property
    def ptp_master_local_priority(self) -> TimingCapsNtpServersPtpMasterLocalPriority:
        """Gets the ptp_master_local_priority of this TimingCapsPtpMasters.


        :return: The ptp_master_local_priority of this TimingCapsPtpMasters.
        :rtype: TimingCapsNtpServersPtpMasterLocalPriority
        """
        return self._ptp_master_local_priority

    @ptp_master_local_priority.setter
    def ptp_master_local_priority(self, ptp_master_local_priority: TimingCapsNtpServersPtpMasterLocalPriority):
        """Sets the ptp_master_local_priority of this TimingCapsPtpMasters.


        :param ptp_master_local_priority: The ptp_master_local_priority of this TimingCapsPtpMasters.
        :type ptp_master_local_priority: TimingCapsNtpServersPtpMasterLocalPriority
        """
        if ptp_master_local_priority is None:
            raise ValueError("Invalid value for `ptp_master_local_priority`, must not be `None`")  # noqa: E501

        self._ptp_master_local_priority = ptp_master_local_priority

    @property
    def delay_req_max_rate(self) -> TimingCapsNtpServersDelayReqMaxRate:
        """Gets the delay_req_max_rate of this TimingCapsPtpMasters.


        :return: The delay_req_max_rate of this TimingCapsPtpMasters.
        :rtype: TimingCapsNtpServersDelayReqMaxRate
        """
        return self._delay_req_max_rate

    @delay_req_max_rate.setter
    def delay_req_max_rate(self, delay_req_max_rate: TimingCapsNtpServersDelayReqMaxRate):
        """Sets the delay_req_max_rate of this TimingCapsPtpMasters.


        :param delay_req_max_rate: The delay_req_max_rate of this TimingCapsPtpMasters.
        :type delay_req_max_rate: TimingCapsNtpServersDelayReqMaxRate
        """
        if delay_req_max_rate is None:
            raise ValueError("Invalid value for `delay_req_max_rate`, must not be `None`")  # noqa: E501

        self._delay_req_max_rate = delay_req_max_rate
